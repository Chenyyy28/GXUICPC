{"ast":null,"code":"// import HomePage from '@/components/HomePage.vue'\n// import Hello from '@/components/Hello.vue'\nimport HomePage from '@/components/HomePage.vue';\nimport UserPage from '@/components/UserPage.vue';\nimport Login from '@/views/Login.vue';\nimport MainPage from '@/views/MainPage.vue';\nimport { createRouter, createWebHashHistory } from 'vue-router';\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/',\n  name: 'MainPage',\n  component: MainPage\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\nlet routeFlag = false;\nexport function resetRouter() {\n  return new Promise(() => {\n    let routeLists = JSON.parse(localStorage.getItem('routeLists'));\n    routeLists.forEach(route => {\n      if (router.resolve(route.link) != undefined) console.log(router.resolve(route.link));\n      router.removeRoute(route.pageName);\n    });\n  });\n}\nfunction addRoutes() {\n  resetRouter();\n  let routeLists = JSON.parse(localStorage.getItem('routeLists'));\n  routeLists.forEach(route => {\n    router.addRoute(\"MainPage\", {\n      path: route.link,\n      name: route.pageName,\n      component: () => import('@/components/' + route.pageName)\n    });\n  });\n}\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem(\"isLogin\");\n  if (token) {\n    if (to.path === \"/login\" || to.path === \"/login/\") {\n      routeFlag = false;\n      next();\n    } else if (routeFlag) {\n      next();\n    } else {\n      routeFlag = true;\n      // addRoutes();\n      next('/home');\n    }\n  } else {\n    routeFlag = false;\n    if (to.path === \"/login\" || to.path === \"/login/\") {\n      next();\n    } else {\n      next({\n        name: 'Login'\n      });\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["HomePage","UserPage","Login","MainPage","createRouter","createWebHashHistory","routes","path","name","component","router","history","routeFlag","resetRouter","Promise","routeLists","JSON","parse","localStorage","getItem","forEach","route","resolve","link","undefined","console","log","removeRoute","pageName","addRoutes","addRoute","beforeEach","to","from","next","token"],"sources":["C:/Users/18725/Desktop/集训队管理系统开发/manage/front/manage/src/router/index.js"],"sourcesContent":["// import HomePage from '@/components/HomePage.vue'\n// import Hello from '@/components/Hello.vue'\nimport HomePage from '@/components/HomePage.vue';\nimport UserPage from '@/components/UserPage.vue';\nimport Login from '@/views/Login.vue'\nimport MainPage from '@/views/MainPage.vue';\n\nimport { createRouter, createWebHashHistory } from 'vue-router'\n\nconst routes = [\n  {\n    path: '/login',\n    name: 'Login',\n    component: Login\n  },\n  {\n    path: '/',\n    name: 'MainPage',\n    component: MainPage,\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nlet routeFlag = false;\n\nexport function resetRouter() {\n  return new Promise(() => {\n    let routeLists = JSON.parse(localStorage.getItem('routeLists'));\n    routeLists.forEach(route => {\n\n      if (router.resolve(route.link) != undefined)\n        console.log(router.resolve(route.link));\n      router.removeRoute(route.pageName);\n    })\n  })\n\n}\nfunction addRoutes() {\n  resetRouter();\n  let routeLists = JSON.parse(localStorage.getItem('routeLists'));\n  routeLists.forEach(route => {\n    router.addRoute(\"MainPage\", {\n      path: route.link,\n      name: route.pageName,\n      component: () => import('@/components/' + route.pageName)\n    })\n  })\n}\n\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem(\"isLogin\");\n  if (token) {\n    if (to.path === \"/login\" || to.path === \"/login/\") {\n      routeFlag = false;\n      next();\n    }\n    else if (routeFlag) {\n      next();\n    } else {\n      routeFlag = true;\n      // addRoutes();\n      next('/home');\n    }\n  } else {\n    routeFlag = false;\n    if (to.path === \"/login\" || to.path === \"/login/\") {\n      next();\n    } else {\n      next({ name: 'Login' });\n    }\n  }\n})\n\nexport default router\n"],"mappings":"AAAA;AACA;AACA,OAAOA,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAE3C,SAASC,YAAY,EAAEC,oBAAoB,QAAQ,YAAY;AAE/D,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEN;AACb,CAAC,CACF;AAED,MAAMO,MAAM,GAAGN,YAAY,CAAC;EAC1BO,OAAO,EAAEN,oBAAoB,CAAC,CAAC;EAC/BC;AACF,CAAC,CAAC;AAEF,IAAIM,SAAS,GAAG,KAAK;AAErB,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,OAAO,IAAIC,OAAO,CAAC,MAAM;IACvB,IAAIC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;IAC/DJ,UAAU,CAACK,OAAO,CAACC,KAAK,IAAI;MAE1B,IAAIX,MAAM,CAACY,OAAO,CAACD,KAAK,CAACE,IAAI,CAAC,IAAIC,SAAS,EACzCC,OAAO,CAACC,GAAG,CAAChB,MAAM,CAACY,OAAO,CAACD,KAAK,CAACE,IAAI,CAAC,CAAC;MACzCb,MAAM,CAACiB,WAAW,CAACN,KAAK,CAACO,QAAQ,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC,CAAC;AAEJ;AACA,SAASC,SAASA,CAAA,EAAG;EACnBhB,WAAW,CAAC,CAAC;EACb,IAAIE,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;EAC/DJ,UAAU,CAACK,OAAO,CAACC,KAAK,IAAI;IAC1BX,MAAM,CAACoB,QAAQ,CAAC,UAAU,EAAE;MAC1BvB,IAAI,EAAEc,KAAK,CAACE,IAAI;MAChBf,IAAI,EAAEa,KAAK,CAACO,QAAQ;MACpBnB,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,eAAe,GAAGY,KAAK,CAACO,QAAQ;IAC1D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEAlB,MAAM,CAACqB,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAGjB,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAC7C,IAAIgB,KAAK,EAAE;IACT,IAAIH,EAAE,CAACzB,IAAI,KAAK,QAAQ,IAAIyB,EAAE,CAACzB,IAAI,KAAK,SAAS,EAAE;MACjDK,SAAS,GAAG,KAAK;MACjBsB,IAAI,CAAC,CAAC;IACR,CAAC,MACI,IAAItB,SAAS,EAAE;MAClBsB,IAAI,CAAC,CAAC;IACR,CAAC,MAAM;MACLtB,SAAS,GAAG,IAAI;MAChB;MACAsB,IAAI,CAAC,OAAO,CAAC;IACf;EACF,CAAC,MAAM;IACLtB,SAAS,GAAG,KAAK;IACjB,IAAIoB,EAAE,CAACzB,IAAI,KAAK,QAAQ,IAAIyB,EAAE,CAACzB,IAAI,KAAK,SAAS,EAAE;MACjD2B,IAAI,CAAC,CAAC;IACR,CAAC,MAAM;MACLA,IAAI,CAAC;QAAE1B,IAAI,EAAE;MAAQ,CAAC,CAAC;IACzB;EACF;AACF,CAAC,CAAC;AAEF,eAAeE,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}