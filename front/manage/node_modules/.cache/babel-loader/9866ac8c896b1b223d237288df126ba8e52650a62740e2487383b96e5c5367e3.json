{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport moment from 'moment';\nimport { reactive, ref, nextTick } from 'vue';\n// import { Search } from '@element-plus/icons-vue'\nexport default {\n  setup() {\n    let state = reactive({\n      tableData: []\n    });\n    const currentPage = ref(1);\n    const pageSize = ref(100);\n    const total = ref(1);\n    const username = ref();\n    const role = ref('-1');\n    const dialogVisible = ref(false);\n    const userForm = reactive({\n      username: '',\n      passwoed: '',\n      email: '',\n      signature: '',\n      roleId: ''\n    });\n    function dateFormat(row, column) {\n      var date = row[column.property];\n      if (date == undefined) {\n        return \"\";\n      }\n      return moment(date).format('YYYY-MM-DD HH:mm:ss');\n    }\n    function handleSizeChange(val) {\n      pageSize.value = val;\n      nextTick(() => {\n        doSearch();\n      });\n      // location.reload();\n    }\n    function handleCurrentChange(val) {\n      currentPage.value = val;\n      nextTick(() => {\n        doSearch();\n      });\n      // location.reload();\n    }\n    const getUserLists = function () {\n      axios.get(\"/url/user\", {\n        params: {\n          currentPage: currentPage.value,\n          pageSize: pageSize.value,\n          role: role.value == -1 ? null : role.value,\n          username: username.value === '' ? null : username.value\n        }\n      }).then(res => res.data).then(res => res.data).then(data => {\n        console.log(data);\n        state.tableData = data.list;\n        total.value = data.total;\n      }).catch(err => {\n        console.log(err);\n        ElMessage.error(\"用户列表获取失败\");\n      });\n    };\n    const doSearch = () => {\n      nextTick(() => {\n        getUserLists();\n      });\n    };\n    const handleClose = done => {\n      ElMessageBox.confirm('Are you sure to close this dialog?').then(() => {\n        done();\n      }).catch(() => {\n        // catch error\n      });\n    };\n    return {\n      state,\n      dateFormat,\n      currentPage,\n      pageSize,\n      username,\n      role,\n      total,\n      handleSizeChange,\n      handleCurrentChange,\n      getUserLists,\n      doSearch,\n      dialogVisible,\n      handleClose,\n      userForm\n    };\n  },\n  beforeCreate() {\n    this.getUserLists();\n  }\n};","map":{"version":3,"names":["axios","ElMessage","ElMessageBox","moment","reactive","ref","nextTick","setup","state","tableData","currentPage","pageSize","total","username","role","dialogVisible","userForm","passwoed","email","signature","roleId","dateFormat","row","column","date","property","undefined","format","handleSizeChange","val","value","doSearch","handleCurrentChange","getUserLists","get","params","then","res","data","console","log","list","catch","err","error","handleClose","done","confirm","beforeCreate"],"sources":["C:\\Users\\18725\\Desktop\\集训队管理系统开发\\manage\\front\\manage\\src\\components\\UserPage.vue"],"sourcesContent":["<template>\r\n    <el-main class=\"main\">\r\n        <div style=\"margin-bottom: 10px; position:relative\">\r\n            <el-input v-model=\"username\" style=\"max-width: 600px\" placeholder=\"Please input\" class=\"input-with-select\">\r\n                <template #prepend>\r\n                    <el-select v-model=\"role\" placeholder=\"选择用户权限\" style=\"width: 115px\">\r\n                        <el-option label=\"全部成员\" value=\"-1\" />\r\n                        <el-option label=\"管理员\" value=\"0\" />\r\n                        <el-option label=\"现役成员\" value=\"1\" />\r\n                        <el-option label=\"退役成员\" value=\"2\" />\r\n                    </el-select>\r\n                </template>\r\n                <template #append>\r\n                    <el-button icon=\"Search\" @click=\"doSearch\" />\r\n                </template>\r\n            </el-input>\r\n            <el-button key type=\"primary\" @click=\"dialogVisible = true\" text bg style=\"margin-left:10px\">\r\n                新增用户\r\n            </el-button>\r\n        </div>\r\n\r\n        <el-dialog v-model=\"dialogVisible\" title=\"输入用户信息\" width=\"500\" :before-close=\"handleClose\">\r\n            <el-form ref=\"ruleFormRef\" style=\"max-width: 600px\" :model=\"userForm\" status-icon :rules=\"rules\"\r\n                label-width=\"auto\" class=\"demo-ruleForm\">\r\n                <el-form-item label=\"姓名\" prop=\"username\">\r\n                    <el-input v-model=\"ruleForm.username\" type=\"password\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"passwoed\">\r\n                    <el-input v-model=\"ruleForm.passwoed\" type=\"password\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"ruleForm.email\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"签名\" prop=\"signature\">\r\n                    <el-input v-model=\"ruleForm.email\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"权限\" prop=\"role\">\r\n                    <el-input v-model=\"ruleForm.role\" />\r\n                </el-form-item>\r\n            </el-form>\r\n            <template #footer>\r\n                <div class=\"dialog-footer\">\r\n                    <el-button @click=\"dialogVisible = false\">Cancel</el-button>\r\n                    <el-button type=\"primary\" @click=\"dialogVisible = false\">\r\n                        Confirm\r\n                    </el-button>\r\n                </div>\r\n            </template>\r\n        </el-dialog>\r\n        <el-table :data=\"state.tableData\" stripe style=\"width: 100%\">\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"50\" />\r\n            <el-table-column prop=\"username\" label=\"姓名\" width=\"150\" />\r\n            <el-table-column prop=\"password\" label=\"密码\" />\r\n            <el-table-column prop=\"email\" label=\"邮箱\" />\r\n            <el-table-column prop=\"signature\" label=\"签名\" width=\"300\" />\r\n            <el-table-column prop=\"roleId\" label=\"权限 \" />\r\n            <el-table-column prop=\"createTime\" label=\"创建时间\" :formatter=\"dateFormat\" />\r\n            <el-table-column prop=\"updateTime\" label=\"修改时间\" :formatter=\"dateFormat\" />\r\n            <el-table-column label=\"操作\">\r\n                <el-button key type=\"success\" text bg>\r\n                    编辑\r\n                </el-button>\r\n                <el-button key type=\"danger\" text bg>\r\n                    删除\r\n                </el-button>\r\n            </el-table-column>\r\n        </el-table>\r\n        <el-pagination v-model:current-page=\"currentPage\" v-model:page-size=\"pageSize\"\r\n            :page-sizes=\"[100, 200, 300, 400]\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\"\r\n            @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" style=\"margin-top: 10px;\" />\r\n    </el-main>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport moment from 'moment';\r\nimport { reactive, ref, nextTick } from 'vue';\r\n// import { Search } from '@element-plus/icons-vue'\r\nexport default {\r\n    setup() {\r\n        let state = reactive({\r\n            tableData: []\r\n        });\r\n        const currentPage = ref(1);\r\n        const pageSize = ref(100);\r\n        const total = ref(1);\r\n        const username = ref()\r\n        const role = ref('-1')\r\n        const dialogVisible = ref(false)\r\n        const userForm = reactive({\r\n            username: '',\r\n            passwoed: '',\r\n            email: '',\r\n            signature: '',\r\n            roleId: ''\r\n        })\r\n        function dateFormat(row, column) {\r\n            var date = row[column.property];\r\n            if (date == undefined) {\r\n                return \"\";\r\n            }\r\n            return moment(date).format('YYYY-MM-DD HH:mm:ss');\r\n        }\r\n        function handleSizeChange(val) {\r\n            pageSize.value = val;\r\n            nextTick(() => {\r\n                doSearch();\r\n            })\r\n            // location.reload();\r\n        }\r\n        function handleCurrentChange(val) {\r\n            currentPage.value = val;\r\n            nextTick(() => {\r\n                doSearch();\r\n            })\r\n            // location.reload();\r\n        }\r\n        const getUserLists = function () {\r\n            axios.get(\"/url/user\", {\r\n                params:\r\n                {\r\n                    currentPage: currentPage.value,\r\n                    pageSize: pageSize.value,\r\n                    role: role.value == -1 ? null : role.value,\r\n                    username: username.value === '' ? null : username.value\r\n                }\r\n            }).then(res => res.data).then(res => res.data)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    state.tableData = data.list;\r\n                    total.value = data.total;\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n\r\n                    ElMessage.error(\"用户列表获取失败\");\r\n                })\r\n        }\r\n        const doSearch = () => {\r\n            nextTick(() => {\r\n                getUserLists();\r\n            })\r\n        }\r\n        const handleClose = (done) => {\r\n            ElMessageBox.confirm('Are you sure to close this dialog?')\r\n                .then(() => {\r\n                    done()\r\n                })\r\n                .catch(() => {\r\n                    // catch error\r\n                })\r\n        }\r\n        return {\r\n            state,\r\n            dateFormat,\r\n            currentPage,\r\n            pageSize,\r\n            username,\r\n            role,\r\n            total,\r\n            handleSizeChange,\r\n            handleCurrentChange,\r\n            getUserLists,\r\n            doSearch,\r\n            dialogVisible,\r\n            handleClose,\r\n            userForm\r\n        }\r\n    },\r\n    beforeCreate() {\r\n        this.getUserLists();\r\n    }\r\n}\r\n</script>\r\n\r\n<style s>\r\n.main {\r\n    background-color: #EEE\r\n}\r\n\r\n.mainBody {\r\n    background-color: white;\r\n    width: 70%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    position: relative;\r\n}\r\n\r\n.myBody {\r\n    position: absolute;\r\n    left: 10%;\r\n    top: 10%;\r\n    width: 80%;\r\n    height: 90%;\r\n}\r\n\r\n.name {\r\n    width: -100px;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n}\r\n\r\n.gexing {\r\n    font-family: STXingkai, '华正行楷';\r\n}\r\n\r\n.input-with-select .el-input-group__prepend {\r\n    background-color: var(--el-fill-color-blank);\r\n}\r\n</style>"],"mappings":"AAyEA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,SAAS,EAAEC,YAAW,QAAS,cAAc;AACtD,OAAOC,MAAK,MAAO,QAAQ;AAC3B,SAASC,QAAQ,EAAEC,GAAG,EAAEC,QAAO,QAAS,KAAK;AAC7C;AACA,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,IAAIC,KAAI,GAAIJ,QAAQ,CAAC;MACjBK,SAAS,EAAE;IACf,CAAC,CAAC;IACF,MAAMC,WAAU,GAAIL,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMM,QAAO,GAAIN,GAAG,CAAC,GAAG,CAAC;IACzB,MAAMO,KAAI,GAAIP,GAAG,CAAC,CAAC,CAAC;IACpB,MAAMQ,QAAO,GAAIR,GAAG,CAAC;IACrB,MAAMS,IAAG,GAAIT,GAAG,CAAC,IAAI;IACrB,MAAMU,aAAY,GAAIV,GAAG,CAAC,KAAK;IAC/B,MAAMW,QAAO,GAAIZ,QAAQ,CAAC;MACtBS,QAAQ,EAAE,EAAE;MACZI,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE;IACZ,CAAC;IACD,SAASC,UAAUA,CAACC,GAAG,EAAEC,MAAM,EAAE;MAC7B,IAAIC,IAAG,GAAIF,GAAG,CAACC,MAAM,CAACE,QAAQ,CAAC;MAC/B,IAAID,IAAG,IAAKE,SAAS,EAAE;QACnB,OAAO,EAAE;MACb;MACA,OAAOvB,MAAM,CAACqB,IAAI,CAAC,CAACG,MAAM,CAAC,qBAAqB,CAAC;IACrD;IACA,SAASC,gBAAgBA,CAACC,GAAG,EAAE;MAC3BlB,QAAQ,CAACmB,KAAI,GAAID,GAAG;MACpBvB,QAAQ,CAAC,MAAM;QACXyB,QAAQ,CAAC,CAAC;MACd,CAAC;MACD;IACJ;IACA,SAASC,mBAAmBA,CAACH,GAAG,EAAE;MAC9BnB,WAAW,CAACoB,KAAI,GAAID,GAAG;MACvBvB,QAAQ,CAAC,MAAM;QACXyB,QAAQ,CAAC,CAAC;MACd,CAAC;MACD;IACJ;IACA,MAAME,YAAW,GAAI,SAAAA,CAAA,EAAY;MAC7BjC,KAAK,CAACkC,GAAG,CAAC,WAAW,EAAE;QACnBC,MAAM,EACN;UACIzB,WAAW,EAAEA,WAAW,CAACoB,KAAK;UAC9BnB,QAAQ,EAAEA,QAAQ,CAACmB,KAAK;UACxBhB,IAAI,EAAEA,IAAI,CAACgB,KAAI,IAAK,CAAC,IAAI,IAAG,GAAIhB,IAAI,CAACgB,KAAK;UAC1CjB,QAAQ,EAAEA,QAAQ,CAACiB,KAAI,KAAM,EAAC,GAAI,IAAG,GAAIjB,QAAQ,CAACiB;QACtD;MACJ,CAAC,CAAC,CAACM,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAACF,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,EACxCF,IAAI,CAACE,IAAG,IAAK;QACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB9B,KAAK,CAACC,SAAQ,GAAI6B,IAAI,CAACG,IAAI;QAC3B7B,KAAK,CAACkB,KAAI,GAAIQ,IAAI,CAAC1B,KAAK;MAC5B,CAAC,EACA8B,KAAK,CAACC,GAAE,IAAK;QACVJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;QAEhB1C,SAAS,CAAC2C,KAAK,CAAC,UAAU,CAAC;MAC/B,CAAC;IACT;IACA,MAAMb,QAAO,GAAIA,CAAA,KAAM;MACnBzB,QAAQ,CAAC,MAAM;QACX2B,YAAY,CAAC,CAAC;MAClB,CAAC;IACL;IACA,MAAMY,WAAU,GAAKC,IAAI,IAAK;MAC1B5C,YAAY,CAAC6C,OAAO,CAAC,oCAAoC,EACpDX,IAAI,CAAC,MAAM;QACRU,IAAI,CAAC;MACT,CAAC,EACAJ,KAAK,CAAC,MAAM;QACT;MAAA,CACH;IACT;IACA,OAAO;MACHlC,KAAK;MACLa,UAAU;MACVX,WAAW;MACXC,QAAQ;MACRE,QAAQ;MACRC,IAAI;MACJF,KAAK;MACLgB,gBAAgB;MAChBI,mBAAmB;MACnBC,YAAY;MACZF,QAAQ;MACRhB,aAAa;MACb8B,WAAW;MACX7B;IACJ;EACJ,CAAC;EACDgC,YAAYA,CAAA,EAAG;IACX,IAAI,CAACf,YAAY,CAAC,CAAC;EACvB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}