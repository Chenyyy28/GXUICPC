{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"text-align\": \"center\",\n    \"margin-bottom\": \"10px\",\n    \"position\": \"relative\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"dialog-footer\"\n};\nconst _hoisted_3 = {\n  class: \"dialog-footer\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  return _openBlock(), _createBlock(_component_el_main, {\n    class: \"main\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_input, {\n      modelValue: $setup.contestName,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.contestName = $event),\n      style: {\n        \"max-width\": \"600px\"\n      },\n      placeholder: \"Please input\",\n      class: \"input-with-select\"\n    }, {\n      append: _withCtx(() => [_createVNode(_component_el_button, {\n        icon: \"Search\",\n        onClick: $setup.doSearch\n      }, null, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), $setup.isAdmin ? (_openBlock(), _createBlock(_component_el_button, {\n      key: \"\",\n      type: \"primary\",\n      onClick: _cache[1] || (_cache[1] = $event => {\n        $setup.dialogVisible = true;\n        $setup.isAdd = true;\n      }),\n      text: \"\",\n      bg: \"\",\n      style: {\n        \"margin-left\": \"10px\"\n      }\n    }, {\n      default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\" +新增训练 \")])),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_el_dialog, {\n      style: {\n        \"text-align\": \"center\"\n      },\n      modelValue: $setup.dialogVisible,\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.dialogVisible = $event),\n      title: \"输入用户信息\",\n      width: \"500\",\n      \"before-close\": $setup.handleClose\n    }, {\n      footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_button, {\n        onClick: $setup.cancelForm\n      }, {\n        default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"取消\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submit\n      }, {\n        default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\" 提交 \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])])]),\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        style: {\n          \"max-width\": \"400px\",\n          \"margin\": \"0 auto\"\n        },\n        model: $setup.contestForm,\n        \"status-icon\": \"\",\n        \"label-width\": \"auto\",\n        class: \"demo-ruleForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"训练描述\",\n          prop: \"description\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $setup.contestForm.description,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.contestForm.description = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"链接\",\n          prop: \"url\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $setup.contestForm.url,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.contestForm.url = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"训练面向人群\",\n          prop: \"roleId\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_select, {\n            modelValue: $setup.contestForm.roleId,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.contestForm.roleId = $event),\n            placeholder: \"请选择对象\",\n            style: {\n              \"width\": \"240px\"\n            }\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.roleOptions, item => {\n              return _openBlock(), _createBlock(_component_el_option, {\n                key: item.value,\n                label: item.label,\n                value: item.value\n              }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n            }), 128 /* KEYED_FRAGMENT */))]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\", \"before-close\"]), _createVNode(_component_el_dialog, {\n      style: {\n        \"text-align\": \"center\"\n      },\n      modelValue: $setup.rankVisible,\n      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.rankVisible = $event),\n      title: \"输入用户信息\",\n      width: \"500\",\n      \"before-close\": $setup.handleClose\n    }, {\n      footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n        onClick: $setup.cancelForm\n      }, {\n        default: _withCtx(() => _cache[16] || (_cache[16] = [_createTextVNode(\"取消\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submit\n      }, {\n        default: _withCtx(() => _cache[17] || (_cache[17] = [_createTextVNode(\" 提交 \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])])]),\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        style: {\n          \"max-width\": \"400px\",\n          \"margin\": \"0 auto\"\n        },\n        model: $setup.rankForm,\n        \"status-icon\": \"\",\n        \"label-width\": \"auto\",\n        class: \"demo-ruleForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"现场出题数\",\n          prop: \"raceNum\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $setup.rankForm.raceNum,\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.rankForm.raceNum = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"现场排名\",\n          prop: \"ranking\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $setup.rankForm.ranking,\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.rankForm.ranking = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"补题数\",\n          prop: \"supplement\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $setup.rankForm.supplement,\n            \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.rankForm.supplement = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\", \"before-close\"]), _createVNode(_component_el_table, {\n      data: $setup.state.tableData,\n      stripe: \"\",\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"description\",\n        label: \"训练描述\",\n        width: \"400\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"url\",\n        label: \"链接\",\n        width: \"500\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"author\",\n        label: \"作者\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"roleId\",\n        label: \"面向人群\",\n        width: \"300\"\n      }, {\n        default: _withCtx(scope => [scope.row.roleId == 1 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"现役\")) : _createCommentVNode(\"v-if\", true), scope.row.roleId == 2 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"预备役\")) : _createCommentVNode(\"v-if\", true), scope.row.roleId == -1 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"全部\")) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"createTime\",\n        formatter: $setup.dateFormat,\n        label: \"创建时间\",\n        width: \"300\"\n      }, null, 8 /* PROPS */, [\"formatter\"]), _createVNode(_component_el_table_column, {\n        label: \"操作\"\n      }, {\n        default: _withCtx(scope => [$setup.isAdmin ? (_openBlock(), _createBlock(_component_el_button, {\n          key: \"\",\n          type: \"success\",\n          text: \"\",\n          bg: \"\",\n          onClick: $event => $setup.beforeUpdateContest(scope.row)\n        }, {\n          default: _withCtx(() => _cache[18] || (_cache[18] = [_createTextVNode(\" 编辑 \")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), $setup.isAdmin ? (_openBlock(), _createBlock(_component_el_button, {\n          key: \"\",\n          onClick: $event => $setup.deleteUser(scope.row.id),\n          type: \"danger\",\n          text: \"\",\n          bg: \"\"\n        }, {\n          default: _withCtx(() => _cache[19] || (_cache[19] = [_createTextVNode(\" 删除 \")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), !$setup.isAdmin ? (_openBlock(), _createBlock(_component_el_button, {\n          key: \"\",\n          onClick: _cache[10] || (_cache[10] = $event => $setup.rankVisible = true),\n          type: \"primary\",\n          text: \"\",\n          bg: \"\"\n        }, {\n          default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\" 填写信息 \")])),\n          _: 1 /* STABLE */\n        })) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"]), _createVNode(_component_el_pagination, {\n      \"current-page\": $setup.currentPage,\n      \"onUpdate:currentPage\": _cache[11] || (_cache[11] = $event => $setup.currentPage = $event),\n      \"page-size\": $setup.pageSize,\n      \"onUpdate:pageSize\": _cache[12] || (_cache[12] = $event => $setup.pageSize = $event),\n      \"page-sizes\": [100, 200, 300, 400],\n      layout: \"total, sizes, prev, pager, next, jumper\",\n      total: $setup.total,\n      onSizeChange: $setup.handleSizeChange,\n      onCurrentChange: $setup.handleCurrentChange,\n      style: {\n        \"margin-top\": \"10px\"\n      }\n    }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onSizeChange\", \"onCurrentChange\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["style","class","key","_createBlock","_component_el_main","default","_withCtx","_createElementVNode","_hoisted_1","_createVNode","_component_el_input","modelValue","$setup","contestName","_cache","$event","placeholder","append","_component_el_button","icon","onClick","doSearch","_","isAdmin","type","dialogVisible","isAdd","text","bg","_createTextVNode","_createCommentVNode","_component_el_dialog","title","width","handleClose","footer","_hoisted_2","cancelForm","submit","_component_el_form","model","contestForm","_component_el_form_item","label","prop","description","url","_component_el_select","roleId","_createElementBlock","_Fragment","_renderList","roleOptions","item","_component_el_option","value","rankVisible","_hoisted_3","rankForm","raceNum","ranking","supplement","_component_el_table","data","state","tableData","stripe","_component_el_table_column","scope","row","_hoisted_4","_hoisted_5","_hoisted_6","formatter","dateFormat","beforeUpdateContest","deleteUser","id","_component_el_pagination","currentPage","pageSize","layout","total","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange"],"sources":["C:\\Users\\18725\\Desktop\\集训队管理系统开发\\manage\\front\\manage\\src\\components\\ContestPage.vue"],"sourcesContent":["<template>\r\n    <el-main class=\"main\">\r\n        <div style=\"text-align:center;margin-bottom: 10px; position:relative\">\r\n            <el-input v-model=\"contestName\" style=\"max-width: 600px\" placeholder=\"Please input\"\r\n                class=\"input-with-select\">\r\n                <!-- <template #prepend>\r\n                    <el-select v-model=\"role\" placeholder=\"选择用户权限\" style=\"width: 115px\">\r\n                        <el-option label=\"默认排序\" value=\"-1\" />\r\n                        <el-option label=\"按照创建时间排序\" value=\"0\" />\r\n                        <el-option label=\"现役成员\" value=\"1\" />\r\n                        <el-option label=\"退役成员\" value=\"2\" />\r\n                    </el-select>\r\n                </template> -->\r\n                <template #append>\r\n                    <el-button icon=\"Search\" @click=\"doSearch\" />\r\n                </template>\r\n            </el-input>\r\n            <el-button key type=\"primary\" v-if=\"isAdmin\" @click=\"dialogVisible = true; isAdd = true\" text bg\r\n                style=\"margin-left:10px\">\r\n                +新增训练\r\n            </el-button>\r\n        </div>\r\n\r\n        <el-dialog style=\"text-align: center;\" v-model=\"dialogVisible\" title=\"输入用户信息\" width=\"500\"\r\n            :before-close=\"handleClose\">\r\n            <el-form style=\"max-width: 400px;margin:0 auto\" :model=\"contestForm\" status-icon label-width=\"auto\"\r\n                class=\"demo-ruleForm\">\r\n                <el-form-item label=\"训练描述\" prop=\"description\">\r\n                    <el-input v-model=\"contestForm.description\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"链接\" prop=\"url\">\r\n                    <el-input v-model=\"contestForm.url\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"训练面向人群\" prop=\"roleId\">\r\n                    <el-select v-model=\"contestForm.roleId\" placeholder=\"请选择对象\" style=\"width: 240px\">\r\n                        <el-option v-for=\"item in roleOptions\" :key=\"item.value\" :label=\"item.label\"\r\n                            :value=\"item.value\" />\r\n                    </el-select>\r\n                </el-form-item>\r\n            </el-form>\r\n            <template #footer>\r\n                <div class=\"dialog-footer\">\r\n                    <el-button @click=\"cancelForm\">取消</el-button>\r\n                    <el-button type=\"primary\" @click=\"submit\">\r\n                        提交\r\n                    </el-button>\r\n                </div>\r\n            </template>\r\n        </el-dialog>\r\n        <el-dialog style=\"text-align: center;\" v-model=\"rankVisible\" title=\"输入用户信息\" width=\"500\"\r\n            :before-close=\"handleClose\">\r\n            <el-form style=\"max-width: 400px;margin:0 auto\" :model=\"rankForm\" status-icon label-width=\"auto\"\r\n                class=\"demo-ruleForm\">\r\n                <el-form-item label=\"现场出题数\" prop=\"raceNum\">\r\n                    <el-input v-model=\"rankForm.raceNum\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"现场排名\" prop=\"ranking\">\r\n                    <el-input v-model=\"rankForm.ranking\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"补题数\" prop=\"supplement\">\r\n                    <el-input v-model=\"rankForm.supplement\" />\r\n                </el-form-item>\r\n            </el-form>\r\n            <template #footer>\r\n                <div class=\"dialog-footer\">\r\n                    <el-button @click=\"cancelForm\">取消</el-button>\r\n                    <el-button type=\"primary\" @click=\"submit\">\r\n                        提交\r\n                    </el-button>\r\n                </div>\r\n            </template>\r\n        </el-dialog>\r\n        <el-table :data=\"state.tableData\" stripe style=\"width: 100%\">\r\n            <el-table-column prop=\"description\" label=\"训练描述\" width=\"400\" />\r\n            <el-table-column prop=\"url\" label=\"链接\" width=\"500\" />\r\n            <el-table-column prop=\"author\" label=\"作者\" />\r\n            <el-table-column prop=\"roleId\" label=\"面向人群\" width=\"300\">\r\n                <template #default=\"scope\">\r\n                    <span v-if=\"scope.row.roleId == 1\">现役</span>\r\n                    <span v-if=\"scope.row.roleId == 2\">预备役</span>\r\n                    <span v-if=\"scope.row.roleId == -1\">全部</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"createTime\" :formatter=\"dateFormat\" label=\"创建时间\" width=\"300\" />\r\n\r\n            <el-table-column label=\"操作\">\r\n                <template v-slot=\"scope\">\r\n                    <el-button key type=\"success\" text bg @click=\"beforeUpdateContest(scope.row)\" v-if=\"isAdmin\">\r\n                        编辑\r\n                    </el-button>\r\n                    <el-button key @click=\"deleteUser(scope.row.id)\" type=\"danger\" text bg v-if=\"isAdmin\">\r\n                        删除\r\n                    </el-button>\r\n                    <el-button key @click=\"rankVisible = true\" type=\"primary\" text bg v-if=\"!isAdmin\">\r\n                        填写信息\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <el-pagination v-model:current-page=\"currentPage\" v-model:page-size=\"pageSize\"\r\n            :page-sizes=\"[100, 200, 300, 400]\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\"\r\n            @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" style=\"margin-top: 10px;\" />\r\n\r\n    </el-main>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport moment from 'moment';\r\nimport { reactive, ref, nextTick } from 'vue';\r\n// import { Search } from '@element-plus/icons-vue'\r\nexport default {\r\n    setup() {\r\n        let state = reactive({\r\n            tableData: []\r\n        });\r\n        const currentPage = ref(1);\r\n        const pageSize = ref(100);\r\n        const total = ref(1);\r\n        const contestName = ref()\r\n        const role = ref('-1')\r\n        const dialogVisible = ref(false);\r\n        const needPassword = ref(true);\r\n        const isAdd = ref(false);\r\n        const isAdmin = ref(true)\r\n        const rankVisible = ref(false)\r\n        let user = reactive({})\r\n        const roleOptions = reactive([\r\n            {\r\n                value: 1,\r\n                label: '现役'\r\n            },\r\n            {\r\n                value: 2,\r\n                label: '预备役'\r\n            },\r\n            {\r\n                value: -1,\r\n                label: '全部'\r\n            }\r\n        ])\r\n        let contestForm = reactive({\r\n            id: 0,\r\n            description: '',\r\n            url: '',\r\n            roleId: '',\r\n        })\r\n        let rankForm = reactive({\r\n            raceNum: '',\r\n            ranking: '',\r\n            supplement: ''\r\n        })\r\n        function dateFormat(row, column) {\r\n            var date = row[column.property];\r\n            if (date == undefined) {\r\n                return \"\";\r\n            }\r\n            return moment(date).format('YYYY-MM-DD HH:mm:ss');\r\n        }\r\n        function handleSizeChange(val) {\r\n            pageSize.value = val;\r\n            nextTick(() => {\r\n                doSearch();\r\n            })\r\n            // location.reload();\r\n        }\r\n        function handleCurrentChange(val) {\r\n            currentPage.value = val;\r\n            nextTick(() => {\r\n                doSearch();\r\n            })\r\n        }\r\n        const getContestLists = function () {\r\n            axios.get(\"/url/contest\", {\r\n                params:\r\n                {\r\n                    currentPage: currentPage.value,\r\n                    pageSize: pageSize.value,\r\n                    contestName: contestName.value === '' ? null : contestName.value,\r\n                    roleId: user.roleId\r\n                }\r\n            }).then(res => res.data).then(res => res.data)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    state.tableData = data.list;\r\n                    total.value = data.total;\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n\r\n                    ElMessage.error(\"用户列表获取失败\");\r\n                })\r\n        }\r\n        function doSearch() {\r\n            nextTick(() => {\r\n                getContestLists();\r\n            })\r\n        }\r\n        const handleClose = (done) => {\r\n            done();\r\n            resetContestForm();\r\n        }\r\n        function resetContestForm() {\r\n            contestForm.id = 0;\r\n            contestForm.description = '';\r\n            contestForm.url = '';\r\n        }\r\n        function submit() {\r\n            dialogVisible.value = false;\r\n            if (isAdd.value == true)\r\n                addContest();\r\n            else {\r\n                updateContest();\r\n            }\r\n        }\r\n        function addContest() {\r\n            axios.post(\"/url/contest\", contestForm)\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    if (res.code == 200) {\r\n                        ElMessage.success(\"添加成功\")\r\n                        location.reload();\r\n\r\n                    } else {\r\n                        ElMessage.success(\"添加失败\")\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    ElMessage.success(\"添加失败\")\r\n\r\n                }).finally(() => {\r\n                    resetContestForm();\r\n                })\r\n        }\r\n        function deleteUser(id) {\r\n            ElMessageBox.confirm(\r\n                '危险操作，确认删除吗',\r\n                'danger',\r\n                {\r\n                    confirmButtonText: '确认',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning',\r\n                }\r\n            ).then(() => {\r\n                axios.delete(\"/url/contest\", {\r\n                    params: {\r\n                        id: id\r\n                    }\r\n                }).then(res => res.data)\r\n                    .then(res => res.data)\r\n                    .then(data => {\r\n                        ElMessage({\r\n                            type: 'error',\r\n                            message: '删除成功'\r\n                        })\r\n                        location.reload();\r\n                    })\r\n                    .catch(err => {\r\n                        ElMessage({\r\n                            type: 'info',\r\n                            message: '取消成功'\r\n                        })\r\n                    })\r\n\r\n            }).catch(() => {\r\n                ElMessage({\r\n                    type: 'info',\r\n                    message: '取消成功'\r\n                })\r\n            })\r\n        }\r\n        function copyProperties(contest) {\r\n            contestForm.id = contest.id;\r\n            contestForm.description = contest.description;\r\n            contestForm.url = contest.url;\r\n            contestForm.roleId = contest.roleId\r\n        }\r\n        function beforeUpdateContest(contest) {\r\n            dialogVisible.value = true;\r\n            isAdd.value = false;\r\n            copyProperties(contest);\r\n        }\r\n        function updateContest() {\r\n            axios.put(\"/url/contest\", contestForm)\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    if (res.code == 200) {\r\n                        ElMessage.success(\"修改成功\")\r\n                        location.reload();\r\n                    } else {\r\n                        ElMessage.success(\"修改失败\")\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    ElMessage.success(\"修改失败\")\r\n                }).finally(() => {\r\n                    resetContestForm();\r\n                })\r\n        }\r\n        function resetRankForm() {\r\n            rankForm.ranking = '';\r\n            rankForm.raceNum = '';\r\n            rankForm.supplement = '';\r\n        }\r\n        function cancelForm() {\r\n            resetContestForm();\r\n            resetRankForm();\r\n            dialogVisible.value = false;\r\n            rankVisible.value = false;\r\n        }\r\n        return {\r\n            state,\r\n            dateFormat,\r\n            currentPage,\r\n            pageSize,\r\n            contestName,\r\n            role,\r\n            total,\r\n            handleSizeChange,\r\n            handleCurrentChange,\r\n            getContestLists,\r\n            doSearch,\r\n            dialogVisible,\r\n            handleClose,\r\n            contestForm,\r\n            submit,\r\n            resetContestForm,\r\n            needPassword,\r\n            deleteUser,\r\n            updateContest,\r\n            beforeUpdateContest,\r\n            cancelForm,\r\n            isAdd,\r\n            isAdmin,\r\n            rankVisible,\r\n            rankForm,\r\n            resetRankForm,\r\n            roleOptions,\r\n            user\r\n        }\r\n    },\r\n    beforeCreate() {\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        if (this.user.roleId == 0)\r\n            this.isAdmin = true;\r\n        else this.isAdmin = false;\r\n        this.getContestLists();\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style s>\r\n.main {\r\n    background-color: #EEE\r\n}\r\n\r\n.mainBody {\r\n    background-color: white;\r\n    width: 70%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    position: relative;\r\n}\r\n\r\n.myBody {\r\n    position: absolute;\r\n    left: 10%;\r\n    top: 10%;\r\n    width: 80%;\r\n    height: 90%;\r\n}\r\n\r\n.name {\r\n    width: -100px;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n}\r\n\r\n.gexing {\r\n    font-family: STXingkai, '华正行楷';\r\n}\r\n\r\n.input-with-select .el-input-group__prepend {\r\n    background-color: var(--el-fill-color-blank);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}