{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\n// Element-Plus的依赖采用的是自动导入，所以这里无需显示的引入，其他地方的element-plus引用同理\nimport { ElMessage } from 'element-plus';\n// import request from '@/utils/request';      //这里使用自行封装的axios，下文已给出，照搬后修改运行端口即可\nimport axios from 'axios';\n// import router from '@/router';\n\nexport default {\n  setup() {\n    // const checkCodeUrl = \"api/checkCode?\" + new Date().getTime();\n    //表单\n    const formDataRef = ref();\n    let formData = reactive({\n      username: \"\",\n      password: \"\"\n    });\n    const rules = {\n      username: [{\n        required: true,\n        message: \"请输入用户名\"\n      }],\n      password: [{\n        required: true,\n        message: \"请输入密码\"\n      }]\n      // checkCode: [{\n      //     required: true,\n      //     message: \"请输入验证码\"\n      // }],\n    };\n\n    // const router = useRouter();\n    const login = async () => {\n      var form_obj = JSON.parse(JSON.stringify(formData));\n      await axios.post(\"/url/login\", form_obj).then(res => res.data).then(res => {\n        if (res.code === 200) {\n          ElMessage({\n            message: '登录成功',\n            type: 'success'\n          });\n          localStorage.setItem(\"isLogin\", res.data.token);\n          localStorage.setItem(\"username\", res.data.username);\n        } else {\n          ElMessage.error('账号或密码错误！！！登录失败！！！');\n        }\n      }).then(() => {\n        axios.get(\"/url/route\").then(res => res.data).then(data => {\n          return data.data;\n        }).then(data => {\n          localStorage.setItem('routeLists', JSON.stringify(data));\n          router.push(\"/\");\n          return data;\n        }).catch(e => {\n          console.log(e);\n          ElMessage.error('账号或密码错误！！！登录失败！！！');\n        });\n      }).then(() => {});\n    };\n    return {\n      formDataRef,\n      formData,\n      rules,\n      login\n    };\n  },\n  created() {\n    localStorage.clear();\n    router.resetRouter();\n  }\n};","map":{"version":3,"names":["ref","reactive","ElMessage","axios","setup","formDataRef","formData","username","password","rules","required","message","login","form_obj","JSON","parse","stringify","post","then","res","data","code","type","localStorage","setItem","token","error","get","router","push","catch","e","console","log","created","clear","resetRouter"],"sources":["C:\\Users\\18725\\Desktop\\集训队管理系统开发\\manage\\front\\manage\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-body\">\r\n        <div class=\"login-panel\">\r\n            <div class=\"login-title\">用户登录</div>\r\n            <el-form :model=\"formData\" :rules=\"rules\" ref=\"formDataRef\">\r\n                <el-form-item prop=\"username\">\r\n                    <el-input placeholder=\"请输入账号\" v-model=\"formData.username\" size=\"large\" type=\"text\">\r\n                        <template #prefix>\r\n                            <el-icon>\r\n                                <i-ep-user />\r\n                            </el-icon>\r\n                        </template>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"password\">\r\n                    <el-input placeholder=\"请输入密码\" v-model=\"formData.password\" size=\"large\" type=\"password\"\r\n                        @keydown.enter=\"login()\">\r\n                        <template #prefix>\r\n                            <el-icon>\r\n                                <i-ep-lock />\r\n                            </el-icon>\r\n                        </template>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <!-- <el-form-item label=\"\">\r\n                    <div class=\"check-code-panel\">\r\n                        <el-input placeholder=\"请输入验证码\" v-model=\"formData.checkCode\" class=\"input-panel\" />\r\n                        <img src=\"checkCodeUrl\" class=\"check-code\">\r\n                    </div>\r\n                </el-form-item> -->\r\n                <!-- <el-form-item label=\"\">\r\n                    <el-checkbox label=\"记住密码\" name=\"type\" />\r\n                </el-form-item> -->\r\n                <el-form-item label=\"\">\r\n                    <el-button type=\"primary\" style=\"width: 100%;\" @click=\"login()\" size=\"large\">登录</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n​\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\n// Element-Plus的依赖采用的是自动导入，所以这里无需显示的引入，其他地方的element-plus引用同理\r\nimport { ElMessage } from 'element-plus';\r\n// import request from '@/utils/request';      //这里使用自行封装的axios，下文已给出，照搬后修改运行端口即可\r\nimport axios from 'axios';\r\n// import router from '@/router';\r\n\r\nexport default ({\r\n    setup() {\r\n        // const checkCodeUrl = \"api/checkCode?\" + new Date().getTime();\r\n        //表单\r\n        const formDataRef = ref();\r\n        let formData = reactive({\r\n            username: \"\",\r\n            password: \"\"\r\n        });\r\n        const rules = {\r\n            username: [{\r\n                required: true,\r\n                message: \"请输入用户名\"\r\n            }],\r\n            password: [{\r\n                required: true,\r\n                message: \"请输入密码\"\r\n            }],\r\n            // checkCode: [{\r\n            //     required: true,\r\n            //     message: \"请输入验证码\"\r\n            // }],\r\n        }\r\n\r\n        // const router = useRouter();\r\n        const login = async () => {\r\n            var form_obj = JSON.parse(JSON.stringify(formData));\r\n            await axios.post(\"/url/login\", form_obj).then(res => res.data).then(res => {\r\n                if (res.code === 200) {\r\n                    ElMessage({\r\n                        message: '登录成功',\r\n                        type: 'success',\r\n                    })\r\n                    localStorage.setItem(\"isLogin\", res.data.token);\r\n                    localStorage.setItem(\"username\", res.data.username);\r\n                } else {\r\n                    ElMessage.error('账号或密码错误！！！登录失败！！！')\r\n                }\r\n            }).then(() => {\r\n                axios.get(\"/url/route\").then(res => res.data).then(data => {\r\n                    return data.data;\r\n                }).then((data) => {\r\n                    localStorage.setItem('routeLists', JSON.stringify(data));\r\n                    router.push(\"/\");\r\n                    return data;\r\n                }).catch(e => {\r\n                    console.log(e);\r\n                    ElMessage.error('账号或密码错误！！！登录失败！！！')\r\n                })\r\n            }).then(() => {\r\n\r\n            });\r\n        };\r\n        return {\r\n            formDataRef,\r\n            formData,\r\n            rules,\r\n            login\r\n        }\r\n    }, created() {\r\n        localStorage.clear();\r\n        router.resetRouter();\r\n    }\r\n})\r\n\r\n</script>\r\n​\r\n<style scoped>\r\n.login-body {\r\n    background: url(\"../assets/bac.jpg\") no-repeat center center;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-size: cover;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n}\r\n\r\n.login-title {\r\n    font-size: 22px;\r\n    text-align: center;\r\n    margin-bottom: 22px;\r\n}\r\n\r\n.login-panel {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n    padding: 25px;\r\n    width: 26%;\r\n    min-width: 460px;\r\n    height: 30%;\r\n    min-height: 300px;\r\n    background: rgba(255, 255, 255, 0.6);\r\n    border-radius: 5%;\r\n    box-shadow: 2px 2px 10px #ddd;\r\n}\r\n</style>"],"mappings":";AA0CA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC;AACA,SAASC,SAAQ,QAAS,cAAc;AACxC;AACA,OAAOC,KAAI,MAAO,OAAO;AACzB;;AAEA,eAAgB;EACZC,KAAKA,CAAA,EAAG;IACJ;IACA;IACA,MAAMC,WAAU,GAAIL,GAAG,CAAC,CAAC;IACzB,IAAIM,QAAO,GAAIL,QAAQ,CAAC;MACpBM,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACd,CAAC,CAAC;IACF,MAAMC,KAAI,GAAI;MACVF,QAAQ,EAAE,CAAC;QACPG,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE;MACb,CAAC,CAAC;MACFH,QAAQ,EAAE,CAAC;QACPE,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE;MACb,CAAC;MACD;MACA;MACA;MACA;IACJ;;IAEA;IACA,MAAMC,KAAI,GAAI,MAAAA,CAAA,KAAY;MACtB,IAAIC,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACV,QAAQ,CAAC,CAAC;MACnD,MAAMH,KAAK,CAACc,IAAI,CAAC,YAAY,EAAEJ,QAAQ,CAAC,CAACK,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAACF,IAAI,CAACC,GAAE,IAAK;QACvE,IAAIA,GAAG,CAACE,IAAG,KAAM,GAAG,EAAE;UAClBnB,SAAS,CAAC;YACNS,OAAO,EAAE,MAAM;YACfW,IAAI,EAAE;UACV,CAAC;UACDC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEL,GAAG,CAACC,IAAI,CAACK,KAAK,CAAC;UAC/CF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEL,GAAG,CAACC,IAAI,CAACb,QAAQ,CAAC;QACvD,OAAO;UACHL,SAAS,CAACwB,KAAK,CAAC,mBAAmB;QACvC;MACJ,CAAC,CAAC,CAACR,IAAI,CAAC,MAAM;QACVf,KAAK,CAACwB,GAAG,CAAC,YAAY,CAAC,CAACT,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAACF,IAAI,CAACE,IAAG,IAAK;UACvD,OAAOA,IAAI,CAACA,IAAI;QACpB,CAAC,CAAC,CAACF,IAAI,CAAEE,IAAI,IAAK;UACdG,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEV,IAAI,CAACE,SAAS,CAACI,IAAI,CAAC,CAAC;UACxDQ,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC;UAChB,OAAOT,IAAI;QACf,CAAC,CAAC,CAACU,KAAK,CAACC,CAAA,IAAK;UACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;UACd7B,SAAS,CAACwB,KAAK,CAAC,mBAAmB;QACvC,CAAC;MACL,CAAC,CAAC,CAACR,IAAI,CAAC,MAAM,CAEd,CAAC,CAAC;IACN,CAAC;IACD,OAAO;MACHb,WAAW;MACXC,QAAQ;MACRG,KAAK;MACLG;IACJ;EACJ,CAAC;EAAEsB,OAAOA,CAAA,EAAG;IACTX,YAAY,CAACY,KAAK,CAAC,CAAC;IACpBP,MAAM,CAACQ,WAAW,CAAC,CAAC;EACxB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}