{"ast":null,"code":"import store from '@/store';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport { ref, onMounted } from 'vue';\nexport default {\n  __name: 'Aside',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // import { store } from '@/store';\n    let isCollapse = ref(true);\n    let asideWidth = ref(70);\n    const routes = [{\n      id: 1,\n      link: '/home',\n      icon: 'UserFilled',\n      name: '个人主页'\n    }];\n    function close() {\n      // isCollapse = false;\n      asideWidth.value = 70;\n      console.log(asideWidth);\n    }\n    function open() {\n      // isCollapse = true;\n      asideWidth.value = 200;\n      console.log(asideWidth);\n    }\n    const dynamicRouter = () => {\n      // this.$store.commit('setDynamicRouter', JSON.stringify(lists));\n      axios.get(\"/url/route\").then(res => res.data).then(data => {\n        // store.state.dynamicRouter = data;\n        const routes = JSON.stringify(data);\n        const lists = JSON.parse(routes);\n        // console.log(lists);\n        // store.state.dynamicRouter = JSON.stringify(lists.data);]\n        console.log(\"Login this : \" + this);\n        this.$store.commit('setDynamicRouter', JSON.stringify(lists));\n        console.log(\"store: \" + store.state.dynamicRouter);\n      }).catch(e => {\n        console.log(e);\n        ElMessage.error(\"菜单请求错误\");\n      });\n    };\n    onMounted(() => {\n      console.log(\"Aside this : \" + this);\n      // dynamicRouter();\n      const list = store.commit('getDynamicRouter');\n      console.log(\"Aside log : \" + list);\n\n      // // for (let i = 0; i < list.length; i++) {\n      // //     routes[i].id = list[i].id;\n      // //     routes[i].link = list[i].link;\n      // //     routes[i].icon = list[i].icon;\n      // //     routes[i].name = list[i].name;\n      // // }\n    });\n    const __returned__ = {\n      get isCollapse() {\n        return isCollapse;\n      },\n      set isCollapse(v) {\n        isCollapse = v;\n      },\n      get asideWidth() {\n        return asideWidth;\n      },\n      set asideWidth(v) {\n        asideWidth = v;\n      },\n      routes,\n      close,\n      open,\n      dynamicRouter,\n      get store() {\n        return store;\n      },\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["store","axios","ElMessage","ref","onMounted","isCollapse","asideWidth","routes","id","link","icon","name","close","value","console","log","open","dynamicRouter","get","then","res","data","JSON","stringify","lists","parse","$store","commit","state","catch","e","error","list"],"sources":["C:/Users/18725/Desktop/集训队管理系统开发/manage/front/manage/src/components/Aside.vue"],"sourcesContent":["<template>\r\n\r\n    <el-aside :style=\"{ width: asideWidth + 'px' }\" style=\"overflow: hidden;\" class=\"aside\">\r\n        <el-radio-group v-model=\"isCollapse\" style=\"margin-bottom: 10px;width: 70px; overflow: hidden;\">\r\n            <el-radio-button @click=\"open\" v-show=\"isCollapse\" :value=\"false\">\r\n                <el-icon>\r\n                    <Open />\r\n                </el-icon>\r\n            </el-radio-button>\r\n            <el-radio-button @click=\"close\" v-show=\"!isCollapse\" :value=\"true\">\r\n                <el-icon>\r\n                    <TurnOff />\r\n                </el-icon>\r\n            </el-radio-button>\r\n        </el-radio-group>\r\n        <el-menu default-active=\"1\" active-text-color=\"#409EFF\" :collapse=\"isCollapse\" @open=\"open\" @close=\"close\"\r\n            :collapse-transition='false' style=\"width: 100%;height: 100%;border:0;\">\r\n            <template v-for=\"item in routes\" :key=\"item.id\">\r\n                <router-link :to=\"item.link\">\r\n                    <el-menu-item :index=\"item.id + ''\">\r\n                        <el-icon>\r\n                            <!-- <UserFilled /> -->\r\n                            <component :is=\"item.icon\" />\r\n                        </el-icon>\r\n                        <template #title>{{ item.name }}</template>\r\n                    </el-menu-item>\r\n                </router-link>\r\n            </template>\r\n        </el-menu>\r\n    </el-aside>\r\n</template>\r\n<script setup>\r\n// import { store } from '@/store';\r\nimport store from '@/store';\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus';\r\nimport { ref, onMounted } from 'vue'\r\nlet isCollapse = ref(true);\r\nlet asideWidth = ref(70);\r\nconst routes = [\r\n    {\r\n        id: 1,\r\n        link: '/home',\r\n        icon: 'UserFilled',\r\n        name: '个人主页'\r\n    }\r\n]\r\nfunction close() {\r\n    // isCollapse = false;\r\n    asideWidth.value = 70;\r\n    console.log(asideWidth)\r\n}\r\nfunction open() {\r\n    // isCollapse = true;\r\n    asideWidth.value = 200\r\n    console.log(asideWidth)\r\n}\r\nconst dynamicRouter = () => {\r\n    // this.$store.commit('setDynamicRouter', JSON.stringify(lists));\r\n    axios.get(\"/url/route\").then(res => res.data).then(data => {\r\n        // store.state.dynamicRouter = data;\r\n        const routes = JSON.stringify(data);\r\n        const lists = JSON.parse(routes);\r\n        // console.log(lists);\r\n        // store.state.dynamicRouter = JSON.stringify(lists.data);]\r\n        console.log(\"Login this : \" + this);\r\n\r\n        this.$store.commit('setDynamicRouter', JSON.stringify(lists))\r\n        console.log(\"store: \" + store.state.dynamicRouter);\r\n\r\n    }).catch(e => {\r\n        console.log(e);\r\n\r\n        ElMessage.error(\"菜单请求错误\");\r\n    })\r\n}\r\n\r\nonMounted(() => {\r\n    console.log(\"Aside this : \" + this);\r\n    // dynamicRouter();\r\n    const list = store.commit('getDynamicRouter');\r\n    console.log(\"Aside log : \" + list);\r\n\r\n    // // for (let i = 0; i < list.length; i++) {\r\n    // //     routes[i].id = list[i].id;\r\n    // //     routes[i].link = list[i].link;\r\n    // //     routes[i].icon = list[i].icon;\r\n    // //     routes[i].name = list[i].name;\r\n    // // }\r\n})\r\n</script>\r\n<style>\r\n.aside {\r\n    /* background-color: #a1a3a6; */\r\n}\r\n\r\n/* .el-menu-vertical-demo:not(.el-menu--collapse) {\r\n    width: 260px;\r\n    height: 100%;\r\n\r\n} */\r\n/* .el-menu-item.is-active {\r\n  background-color: #409eff!important;\r\n} */\r\n</style>"],"mappings":"AAiCA,OAAOA,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,GAAG,EAAEC,SAAS,QAAQ,KAAK;;;;;;;;IAJpC;IAKA,IAAIC,UAAU,GAAGF,GAAG,CAAC,IAAI,CAAC;IAC1B,IAAIG,UAAU,GAAGH,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMI,MAAM,GAAG,CACX;MACIC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE;IACV,CAAC,CACJ;IACD,SAASC,KAAKA,CAAA,EAAG;MACb;MACAN,UAAU,CAACO,KAAK,GAAG,EAAE;MACrBC,OAAO,CAACC,GAAG,CAACT,UAAU,CAAC;IAC3B;IACA,SAASU,IAAIA,CAAA,EAAG;MACZ;MACAV,UAAU,CAACO,KAAK,GAAG,GAAG;MACtBC,OAAO,CAACC,GAAG,CAACT,UAAU,CAAC;IAC3B;IACA,MAAMW,aAAa,GAAGA,CAAA,KAAM;MACxB;MACAhB,KAAK,CAACiB,GAAG,CAAC,YAAY,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAACF,IAAI,CAACE,IAAI,IAAI;QACvD;QACA,MAAMd,MAAM,GAAGe,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC;QACnC,MAAMG,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAClB,MAAM,CAAC;QAChC;QACA;QACAO,OAAO,CAACC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC;QAEnC,IAAI,CAACW,MAAM,CAACC,MAAM,CAAC,kBAAkB,EAAEL,IAAI,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;QAC7DV,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGf,KAAK,CAAC4B,KAAK,CAACX,aAAa,CAAC;MAEtD,CAAC,CAAC,CAACY,KAAK,CAACC,CAAC,IAAI;QACVhB,OAAO,CAACC,GAAG,CAACe,CAAC,CAAC;QAEd5B,SAAS,CAAC6B,KAAK,CAAC,QAAQ,CAAC;MAC7B,CAAC,CAAC;IACN,CAAC;IAED3B,SAAS,CAAC,MAAM;MACZU,OAAO,CAACC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC;MACnC;MACA,MAAMiB,IAAI,GAAGhC,KAAK,CAAC2B,MAAM,CAAC,kBAAkB,CAAC;MAC7Cb,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGiB,IAAI,CAAC;;MAElC;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}