{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\n// Element-Plus的依赖采用的是自动导入，所以这里无需显示的引入，其他地方的element-plus引用同理\nimport { ElMessage } from 'element-plus';\n// import request from '@/utils/request';      //这里使用自行封装的axios，下文已给出，照搬后修改运行端口即可\nimport axios from 'axios';\nimport router, { resetRouter } from '@/router';\nexport default {\n  setup() {\n    // const checkCodeUrl = \"api/checkCode?\" + new Date().getTime();\n    //表单\n    const formDataRef = ref();\n    let formData = reactive({\n      account: \"\",\n      password: \"\"\n    });\n    const rules = {\n      account: [{\n        required: true,\n        message: \"请输入用户名\"\n      }],\n      password: [{\n        required: true,\n        message: \"请输入密码\"\n      }]\n    };\n    const login = () => {\n      var form_obj = JSON.parse(JSON.stringify(formData));\n      axios.post(\"/url/login\", form_obj).then(res => res.data).then(res => {\n        if (res.code === 200) {\n          ElMessage({\n            message: '登录成功',\n            type: 'success'\n          });\n          localStorage.setItem(\"isLogin\", res.data.token);\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n        } else {\n          ElMessage.error('账号或密码错误！！！登录失败！！！');\n        }\n      }).then(() => {\n        axios.get(\"/url/route\").then(res => res.data).then(data => {\n          return data.data;\n        }).then(data => {\n          localStorage.setItem('routeLists', JSON.stringify(data));\n          return data;\n        }).then(() => {\n          router.push('/main');\n        });\n      }).catch(e => {\n        // ElMessage.error(\"登录失败\")\n      });\n    };\n    return {\n      formDataRef,\n      formData,\n      rules,\n      login\n    };\n  },\n  created() {\n    resetRouter();\n    localStorage.clear();\n  }\n};","map":{"version":3,"names":["ref","reactive","ElMessage","axios","router","resetRouter","setup","formDataRef","formData","account","password","rules","required","message","login","form_obj","JSON","parse","stringify","post","then","res","data","code","type","localStorage","setItem","token","user","error","get","push","catch","e","created","clear"],"sources":["C:\\Users\\18725\\Desktop\\集训队管理系统开发\\manage\\front\\manage\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-body\">\r\n        <div class=\"login-panel\">\r\n            <div class=\"login-title\">用户登录</div>\r\n            <el-form :model=\"formData\" :rules=\"rules\" ref=\"formDataRef\">\r\n                <el-form-item prop=\"account\">\r\n                    <el-input placeholder=\"请输入账号\" v-model=\"formData.account\" size=\"large\" type=\"text\">\r\n                        <template #prefix>\r\n                            <el-icon>\r\n                                <i-ep-user />\r\n                            </el-icon>\r\n                        </template>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"password\">\r\n                    <el-input placeholder=\"请输入密码\" v-model=\"formData.password\" size=\"large\" type=\"password\"\r\n                        @keydown.enter=\"login()\">\r\n                        <template #prefix>\r\n                            <el-icon>\r\n                                <i-ep-lock />\r\n                            </el-icon>\r\n                        </template>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <!-- <el-form-item label=\"\">\r\n                    <div class=\"check-code-panel\">\r\n                        <el-input placeholder=\"请输入验证码\" v-model=\"formData.checkCode\" class=\"input-panel\" />\r\n                        <img src=\"checkCodeUrl\" class=\"check-code\">\r\n                    </div>\r\n                </el-form-item> -->\r\n                <!-- <el-form-item label=\"\">\r\n                    <el-checkbox label=\"记住密码\" name=\"type\" />\r\n                </el-form-item> -->\r\n                <el-form-item label=\"\">\r\n                    <el-button type=\"primary\" style=\"width: 100%;\" @click=\"login()\" size=\"large\">登录</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n​\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\n// Element-Plus的依赖采用的是自动导入，所以这里无需显示的引入，其他地方的element-plus引用同理\r\nimport { ElMessage } from 'element-plus';\r\n// import request from '@/utils/request';      //这里使用自行封装的axios，下文已给出，照搬后修改运行端口即可\r\nimport axios from 'axios';\r\nimport router, { resetRouter } from '@/router';\r\n\r\nexport default ({\r\n    setup() {\r\n        // const checkCodeUrl = \"api/checkCode?\" + new Date().getTime();\r\n        //表单\r\n        const formDataRef = ref();\r\n        let formData = reactive({\r\n            account: \"\",\r\n            password: \"\"\r\n        });\r\n        const rules = {\r\n            account: [{\r\n                required: true,\r\n                message: \"请输入用户名\"\r\n            }],\r\n            password: [{\r\n                required: true,\r\n                message: \"请输入密码\"\r\n            }],\r\n        }\r\n        const login = () => {\r\n            var form_obj = JSON.parse(JSON.stringify(formData));\r\n            axios.post(\"/url/login\", form_obj).then(res => res.data).then(res => {\r\n                if (res.code === 200) {\r\n                    ElMessage({\r\n                        message: '登录成功',\r\n                        type: 'success',\r\n                    })\r\n                    localStorage.setItem(\"isLogin\", res.data.token);\r\n                    localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n                } else {\r\n                    ElMessage.error('账号或密码错误！！！登录失败！！！')\r\n                }\r\n            }).then(() => {\r\n                axios.get(\"/url/route\").then(res => res.data).then(data => {\r\n                    return data.data;\r\n                }).then((data) => {\r\n                    localStorage.setItem('routeLists', JSON.stringify(data));\r\n                    return data;\r\n                }).then(() => {\r\n                    router.push('/main');\r\n                })\r\n            }).catch((e) => {\r\n                // ElMessage.error(\"登录失败\")\r\n            });\r\n        };\r\n        \r\n        return {\r\n            formDataRef,\r\n            formData,\r\n            rules,\r\n            login,\r\n        }\r\n    }, created() {\r\n        resetRouter()\r\n        localStorage.clear();\r\n    }\r\n})\r\n\r\n</script>\r\n​\r\n<style scoped>\r\n.login-body {\r\n    background: url(\"../assets/bac.jpg\") no-repeat center center;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-size: cover;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n}\r\n\r\n.login-title {\r\n    font-size: 22px;\r\n    text-align: center;\r\n    margin-bottom: 22px;\r\n}\r\n\r\n.login-panel {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n    padding: 25px;\r\n    width: 26%;\r\n    min-width: 460px;\r\n    height: 30%;\r\n    min-height: 300px;\r\n    background: rgba(255, 255, 255, 0.6);\r\n    border-radius: 5%;\r\n    box-shadow: 2px 2px 10px #ddd;\r\n}\r\n</style>"],"mappings":";AA0CA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC;AACA,SAASC,SAAQ,QAAS,cAAc;AACxC;AACA,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAM,IAAIC,WAAU,QAAS,UAAU;AAE9C,eAAgB;EACZC,KAAKA,CAAA,EAAG;IACJ;IACA;IACA,MAAMC,WAAU,GAAIP,GAAG,CAAC,CAAC;IACzB,IAAIQ,QAAO,GAAIP,QAAQ,CAAC;MACpBQ,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;IACd,CAAC,CAAC;IACF,MAAMC,KAAI,GAAI;MACVF,OAAO,EAAE,CAAC;QACNG,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE;MACb,CAAC,CAAC;MACFH,QAAQ,EAAE,CAAC;QACPE,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE;MACb,CAAC;IACL;IACA,MAAMC,KAAI,GAAIA,CAAA,KAAM;MAChB,IAAIC,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACV,QAAQ,CAAC,CAAC;MACnDL,KAAK,CAACgB,IAAI,CAAC,YAAY,EAAEJ,QAAQ,CAAC,CAACK,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAACF,IAAI,CAACC,GAAE,IAAK;QACjE,IAAIA,GAAG,CAACE,IAAG,KAAM,GAAG,EAAE;UAClBrB,SAAS,CAAC;YACNW,OAAO,EAAE,MAAM;YACfW,IAAI,EAAE;UACV,CAAC;UACDC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEL,GAAG,CAACC,IAAI,CAACK,KAAK,CAAC;UAC/CF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACE,SAAS,CAACG,GAAG,CAACC,IAAI,CAACM,IAAI,CAAC,CAAC;QAC/D,OAAO;UACH1B,SAAS,CAAC2B,KAAK,CAAC,mBAAmB;QACvC;MACJ,CAAC,CAAC,CAACT,IAAI,CAAC,MAAM;QACVjB,KAAK,CAAC2B,GAAG,CAAC,YAAY,CAAC,CAACV,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAACF,IAAI,CAACE,IAAG,IAAK;UACvD,OAAOA,IAAI,CAACA,IAAI;QACpB,CAAC,CAAC,CAACF,IAAI,CAAEE,IAAI,IAAK;UACdG,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEV,IAAI,CAACE,SAAS,CAACI,IAAI,CAAC,CAAC;UACxD,OAAOA,IAAI;QACf,CAAC,CAAC,CAACF,IAAI,CAAC,MAAM;UACVhB,MAAM,CAAC2B,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;MACL,CAAC,CAAC,CAACC,KAAK,CAAEC,CAAC,IAAK;QACZ;MAAA,CACH,CAAC;IACN,CAAC;IAED,OAAO;MACH1B,WAAW;MACXC,QAAQ;MACRG,KAAK;MACLG;IACJ;EACJ,CAAC;EAAEoB,OAAOA,CAAA,EAAG;IACT7B,WAAW,CAAC;IACZoB,YAAY,CAACU,KAAK,CAAC,CAAC;EACxB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}