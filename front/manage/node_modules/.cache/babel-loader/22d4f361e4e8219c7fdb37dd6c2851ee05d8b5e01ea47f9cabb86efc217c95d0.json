{"ast":null,"code":"// import HomePage from '@/components/HomePage.vue'\n// import Hello from '@/components/Hello.vue'\nimport HomePage from '@/components/HomePage.vue';\nimport UserPage from '@/components/UserPage.vue';\nimport Login from '@/views/Login.vue';\nimport MainPage from '@/views/MainPage.vue';\nimport { createRouter, createWebHashHistory } from 'vue-router';\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/',\n  name: 'MainPage',\n  component: MainPage\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\nlet routeFlag = false;\nfunction resetRouter() {\n  const newRouter = createRouter({\n    history: createWebHashHistory(),\n    routes\n  });\n  router.matcher = newRouter.matcher;\n}\nfunction addRoutes() {\n  console.log(\"before: \" + router.options.routes);\n  resetRouter();\n  console.log(\"after: \" + router.options.routes);\n  let routeLists = JSON.parse(localStorage.getItem('routeLists'));\n  routeLists.forEach(route => {\n    router.addRoute(\"MainPage\", {\n      path: route.link,\n      name: route.pageName,\n      component: () => import('@/components/' + route.pageName)\n    });\n  });\n}\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem(\"isLogin\");\n  if (token) {\n    if (to.path === \"/login\" || to.path === \"/login/\") {\n      routeFlag = false;\n      next();\n    } else if (routeFlag) {\n      next();\n    } else {\n      routeFlag = true;\n      addRoutes();\n      next('/home');\n    }\n  } else {\n    routeFlag = false;\n    if (to.path === \"/login\" || to.path === \"/login/\") {\n      next();\n    } else {\n      next({\n        name: 'Login'\n      });\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["HomePage","UserPage","Login","MainPage","createRouter","createWebHashHistory","routes","path","name","component","router","history","routeFlag","resetRouter","newRouter","matcher","addRoutes","console","log","options","routeLists","JSON","parse","localStorage","getItem","forEach","route","addRoute","link","pageName","beforeEach","to","from","next","token"],"sources":["C:/Users/18725/Desktop/集训队管理系统开发/manage/front/manage/src/router/index.js"],"sourcesContent":["// import HomePage from '@/components/HomePage.vue'\n// import Hello from '@/components/Hello.vue'\nimport HomePage from '@/components/HomePage.vue';\nimport UserPage from '@/components/UserPage.vue';\nimport Login from '@/views/Login.vue'\nimport MainPage from '@/views/MainPage.vue';\n\nimport { createRouter, createWebHashHistory } from 'vue-router'\n\nconst routes = [\n  {\n    path: '/login',\n    name: 'Login',\n    component: Login\n  },\n  {\n    path: '/',\n    name: 'MainPage',\n    component: MainPage,\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nlet routeFlag = false;\n\nfunction resetRouter() {\n  const newRouter = createRouter({\n    history: createWebHashHistory(),\n    routes\n  })\n  router.matcher = newRouter.matcher;\n}\n\nfunction addRoutes() {\n  console.log(\"before: \" + router.options.routes);\n\n  resetRouter();\n  console.log(\"after: \" + router.options.routes);\n  let routeLists = JSON.parse(localStorage.getItem('routeLists'));\n\n  routeLists.forEach(route => {\n    router.addRoute(\"MainPage\", {\n      path: route.link,\n      name: route.pageName,\n      component: () => import('@/components/' + route.pageName)\n    })\n  })\n}\n\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem(\"isLogin\");\n  if (token) {\n    if (to.path === \"/login\" || to.path === \"/login/\") {\n      routeFlag = false;\n      next();\n    }\n    else if (routeFlag) {\n      next();\n    } else {\n      routeFlag = true;\n      addRoutes();\n      next('/home');\n    }\n  } else {\n    routeFlag = false;\n    if (to.path === \"/login\" || to.path === \"/login/\") {\n      next();\n    } else {\n      next({ name: 'Login' });\n    }\n  }\n})\n\nexport default router\n"],"mappings":"AAAA;AACA;AACA,OAAOA,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAE3C,SAASC,YAAY,EAAEC,oBAAoB,QAAQ,YAAY;AAE/D,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEN;AACb,CAAC,CACF;AAED,MAAMO,MAAM,GAAGN,YAAY,CAAC;EAC1BO,OAAO,EAAEN,oBAAoB,CAAC,CAAC;EAC/BC;AACF,CAAC,CAAC;AAEF,IAAIM,SAAS,GAAG,KAAK;AAErB,SAASC,WAAWA,CAAA,EAAG;EACrB,MAAMC,SAAS,GAAGV,YAAY,CAAC;IAC7BO,OAAO,EAAEN,oBAAoB,CAAC,CAAC;IAC/BC;EACF,CAAC,CAAC;EACFI,MAAM,CAACK,OAAO,GAAGD,SAAS,CAACC,OAAO;AACpC;AAEA,SAASC,SAASA,CAAA,EAAG;EACnBC,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGR,MAAM,CAACS,OAAO,CAACb,MAAM,CAAC;EAE/CO,WAAW,CAAC,CAAC;EACbI,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGR,MAAM,CAACS,OAAO,CAACb,MAAM,CAAC;EAC9C,IAAIc,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;EAE/DJ,UAAU,CAACK,OAAO,CAACC,KAAK,IAAI;IAC1BhB,MAAM,CAACiB,QAAQ,CAAC,UAAU,EAAE;MAC1BpB,IAAI,EAAEmB,KAAK,CAACE,IAAI;MAChBpB,IAAI,EAAEkB,KAAK,CAACG,QAAQ;MACpBpB,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,eAAe,GAAGiB,KAAK,CAACG,QAAQ;IAC1D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEAnB,MAAM,CAACoB,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAGX,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAC7C,IAAIU,KAAK,EAAE;IACT,IAAIH,EAAE,CAACxB,IAAI,KAAK,QAAQ,IAAIwB,EAAE,CAACxB,IAAI,KAAK,SAAS,EAAE;MACjDK,SAAS,GAAG,KAAK;MACjBqB,IAAI,CAAC,CAAC;IACR,CAAC,MACI,IAAIrB,SAAS,EAAE;MAClBqB,IAAI,CAAC,CAAC;IACR,CAAC,MAAM;MACLrB,SAAS,GAAG,IAAI;MAChBI,SAAS,CAAC,CAAC;MACXiB,IAAI,CAAC,OAAO,CAAC;IACf;EACF,CAAC,MAAM;IACLrB,SAAS,GAAG,KAAK;IACjB,IAAImB,EAAE,CAACxB,IAAI,KAAK,QAAQ,IAAIwB,EAAE,CAACxB,IAAI,KAAK,SAAS,EAAE;MACjD0B,IAAI,CAAC,CAAC;IACR,CAAC,MAAM;MACLA,IAAI,CAAC;QAAEzB,IAAI,EAAE;MAAQ,CAAC,CAAC;IACzB;EACF;AACF,CAAC,CAAC;AAEF,eAAeE,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}