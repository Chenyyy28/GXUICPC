{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, withKeys as _withKeys, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-body\"\n};\nconst _hoisted_2 = {\n  class: \"login-panel\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_i_ep_user = _resolveComponent(\"i-ep-user\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_i_ep_lock = _resolveComponent(\"i-ep-lock\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    class: \"login-title\"\n  }, \"用户登录\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n    model: $setup.formData,\n    rules: $setup.rules,\n    ref: \"formDataRef\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      prop: \"username\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        placeholder: \"请输入账号\",\n        modelValue: $setup.formData.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.formData.username = $event),\n        size: \"large\",\n        type: \"text\"\n      }, {\n        prefix: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_i_ep_user)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        placeholder: \"请输入密码\",\n        modelValue: $setup.formData.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.formData.password = $event),\n        size: \"large\",\n        type: \"password\",\n        onKeydown: _cache[2] || (_cache[2] = _withKeys($event => $setup.login(), [\"enter\"]))\n      }, {\n        prefix: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_i_ep_lock)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" <el-form-item label=\\\"\\\">\\r\\n                    <div class=\\\"check-code-panel\\\">\\r\\n                        <el-input placeholder=\\\"请输入验证码\\\" v-model=\\\"formData.checkCode\\\" class=\\\"input-panel\\\" />\\r\\n                        <img src=\\\"checkCodeUrl\\\" class=\\\"check-code\\\">\\r\\n                    </div>\\r\\n                </el-form-item> \"), _createCommentVNode(\" <el-form-item label=\\\"\\\">\\r\\n                    <el-checkbox label=\\\"记住密码\\\" name=\\\"type\\\" />\\r\\n                </el-form-item> \"), _createVNode(_component_el_form_item, {\n      label: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        style: {\n          \"width\": \"100%\"\n        },\n        onClick: _cache[3] || (_cache[3] = $event => $setup.login()),\n        size: \"large\"\n      }, {\n        default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"登录\")])),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_form","model","$setup","formData","rules","ref","default","_withCtx","_component_el_form_item","prop","_component_el_input","placeholder","modelValue","username","_cache","$event","size","type","prefix","_component_el_icon","_component_i_ep_user","_","password","onKeydown","_withKeys","login","_component_i_ep_lock","_createCommentVNode","label","_component_el_button","style","onClick","_createTextVNode"],"sources":["C:\\Users\\18725\\Desktop\\集训队管理系统开发\\manage\\front\\manage\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-body\">\r\n        <div class=\"login-panel\">\r\n            <div class=\"login-title\">用户登录</div>\r\n            <el-form :model=\"formData\" :rules=\"rules\" ref=\"formDataRef\">\r\n                <el-form-item prop=\"username\">\r\n                    <el-input placeholder=\"请输入账号\" v-model=\"formData.username\" size=\"large\" type=\"text\">\r\n                        <template #prefix>\r\n                            <el-icon>\r\n                                <i-ep-user />\r\n                            </el-icon>\r\n                        </template>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"password\">\r\n                    <el-input placeholder=\"请输入密码\" v-model=\"formData.password\" size=\"large\" type=\"password\"\r\n                        @keydown.enter=\"login()\">\r\n                        <template #prefix>\r\n                            <el-icon>\r\n                                <i-ep-lock />\r\n                            </el-icon>\r\n                        </template>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <!-- <el-form-item label=\"\">\r\n                    <div class=\"check-code-panel\">\r\n                        <el-input placeholder=\"请输入验证码\" v-model=\"formData.checkCode\" class=\"input-panel\" />\r\n                        <img src=\"checkCodeUrl\" class=\"check-code\">\r\n                    </div>\r\n                </el-form-item> -->\r\n                <!-- <el-form-item label=\"\">\r\n                    <el-checkbox label=\"记住密码\" name=\"type\" />\r\n                </el-form-item> -->\r\n                <el-form-item label=\"\">\r\n                    <el-button type=\"primary\" style=\"width: 100%;\" @click=\"login()\" size=\"large\">登录</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n​\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\n// Element-Plus的依赖采用的是自动导入，所以这里无需显示的引入，其他地方的element-plus引用同理\r\nimport { ElMessage } from 'element-plus';\r\n// import request from '@/utils/request';      //这里使用自行封装的axios，下文已给出，照搬后修改运行端口即可\r\nimport axios from 'axios';\r\nimport router, { resetRouter } from '@/router';\r\n\r\nexport default ({\r\n    setup() {\r\n        // const checkCodeUrl = \"api/checkCode?\" + new Date().getTime();\r\n        //表单\r\n        const formDataRef = ref();\r\n        let formData = reactive({\r\n            username: \"\",\r\n            password: \"\"\r\n        });\r\n        const rules = {\r\n            username: [{\r\n                required: true,\r\n                message: \"请输入用户名\"\r\n            }],\r\n            password: [{\r\n                required: true,\r\n                message: \"请输入密码\"\r\n            }],\r\n            // checkCode: [{\r\n            //     required: true,\r\n            //     message: \"请输入验证码\"\r\n            // }],\r\n        }\r\n        const login = () => {\r\n            var form_obj = JSON.parse(JSON.stringify(formData));\r\n            axios.post(\"/url/login\", form_obj).then(res => res.data).then(res => {\r\n                if (res.code === 200) {\r\n                    ElMessage({\r\n                        message: '登录成功',\r\n                        type: 'success',\r\n                    })\r\n                    localStorage.setItem(\"isLogin\", res.data.token);\r\n                    localStorage.setItem(\"username\", res.data.username);\r\n                } else {\r\n                    ElMessage.error('账号或密码错误！！！登录失败！！！')\r\n                }\r\n            }).then(() => {\r\n                axios.get(\"/url/route\").then(res => res.data).then(data => {\r\n                    return data.data;\r\n                }).then((data) => {\r\n                    localStorage.setItem('routeLists', JSON.stringify(data));\r\n                    return data;\r\n                }).then(() => {\r\n                    router.push('/main');\r\n                }).catch(e => {\r\n                    console.log(e);\r\n                    ElMessage.error('账号或密码错误！！！登录失败！！！')\r\n                })\r\n            }).then(() => {\r\n\r\n            });\r\n        };\r\n        return {\r\n            formDataRef,\r\n            formData,\r\n            rules,\r\n            login\r\n        }\r\n    }, created() {\r\n        resetRouter()\r\n                console.log(\"312114212\");\r\n                localStorage.clear();\r\n    }\r\n})\r\n\r\n</script>\r\n​\r\n<style scoped>\r\n.login-body {\r\n    background: url(\"../assets/bac.jpg\") no-repeat center center;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-size: cover;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n}\r\n\r\n.login-title {\r\n    font-size: 22px;\r\n    text-align: center;\r\n    margin-bottom: 22px;\r\n}\r\n\r\n.login-panel {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n    padding: 25px;\r\n    width: 26%;\r\n    min-width: 460px;\r\n    height: 30%;\r\n    min-height: 300px;\r\n    background: rgba(255, 255, 255, 0.6);\r\n    border-radius: 5%;\r\n    box-shadow: 2px 2px 10px #ddd;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAY;;EACdA,KAAK,EAAC;AAAa;;;;;;;;;uBAD5BC,mBAAA,CAqCM,OArCNC,UAqCM,GApCFC,mBAAA,CAmCM,OAnCNC,UAmCM,G,0BAlCFD,mBAAA,CAAmC;IAA9BH,KAAK,EAAC;EAAa,GAAC,MAAI,sBAC7BK,YAAA,CAgCUC,kBAAA;IAhCAC,KAAK,EAAEC,MAAA,CAAAC,QAAQ;IAAGC,KAAK,EAAEF,MAAA,CAAAE,KAAK;IAAEC,GAAG,EAAC;;IAJ1DC,OAAA,EAAAC,QAAA,CAKgB,MAQe,CARfR,YAAA,CAQeS,uBAAA;MARDC,IAAI,EAAC;IAAU;MAL7CH,OAAA,EAAAC,QAAA,CAMoB,MAMW,CANXR,YAAA,CAMWW,mBAAA;QANDC,WAAW,EAAC,OAAO;QANjDC,UAAA,EAM2DV,MAAA,CAAAC,QAAQ,CAACU,QAAQ;QAN5E,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAM2Db,MAAA,CAAAC,QAAQ,CAACU,QAAQ,GAAAE,MAAA;QAAEC,IAAI,EAAC,OAAO;QAACC,IAAI,EAAC;;QAC7DC,MAAM,EAAAX,QAAA,CACb,MAEU,CAFVR,YAAA,CAEUoB,kBAAA;UAVtCb,OAAA,EAAAC,QAAA,CASgC,MAAa,CAAbR,YAAA,CAAaqB,oBAAA,E;UAT7CC,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QAcgBtB,YAAA,CASeS,uBAAA;MATDC,IAAI,EAAC;IAAU;MAd7CH,OAAA,EAAAC,QAAA,CAeoB,MAOW,CAPXR,YAAA,CAOWW,mBAAA;QAPDC,WAAW,EAAC,OAAO;QAfjDC,UAAA,EAe2DV,MAAA,CAAAC,QAAQ,CAACmB,QAAQ;QAf5E,uBAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAe2Db,MAAA,CAAAC,QAAQ,CAACmB,QAAQ,GAAAP,MAAA;QAAEC,IAAI,EAAC,OAAO;QAACC,IAAI,EAAC,UAAU;QACjFM,SAAO,EAAAT,MAAA,QAAAA,MAAA,MAhBhCU,SAAA,CAAAT,MAAA,IAgBwCb,MAAA,CAAAuB,KAAK;;QACVP,MAAM,EAAAX,QAAA,CACb,MAEU,CAFVR,YAAA,CAEUoB,kBAAA;UApBtCb,OAAA,EAAAC,QAAA,CAmBgC,MAAa,CAAbR,YAAA,CAAa2B,oBAAA,E;UAnB7CL,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QAwBgBM,mBAAA,uVAKmB,EACnBA,mBAAA,sIAEmB,EACnB5B,YAAA,CAEeS,uBAAA;MAFDoB,KAAK,EAAC;IAAE;MAjCtCtB,OAAA,EAAAC,QAAA,CAkCoB,MAA2F,CAA3FR,YAAA,CAA2F8B,oBAAA;QAAhFZ,IAAI,EAAC,SAAS;QAACa,KAAoB,EAApB;UAAA;QAAA,CAAoB;QAAEC,OAAK,EAAAjB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEb,MAAA,CAAAuB,KAAK;QAAIT,IAAI,EAAC;;QAlCzFV,OAAA,EAAAC,QAAA,CAkCiG,MAAEO,MAAA,QAAAA,MAAA,OAlCnGkB,gBAAA,CAkCiG,IAAE,E;QAlCnGX,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}