{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\n// Element-Plus的依赖采用的是自动导入，所以这里无需显示的引入，其他地方的element-plus引用同理\nimport { ElMessage } from 'element-plus';\n// import request from '@/utils/request';      //这里使用自行封装的axios，下文已给出，照搬后修改运行端口即可\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nimport store from '@/store';\n\n// const checkCodeUrl = \"api/checkCode?\" + new Date().getTime();\n//表单\n\nexport default {\n  __name: 'Login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const formDataRef = ref();\n    let formData = reactive({\n      username: \"\",\n      password: \"\"\n    });\n    const rules = {\n      username: [{\n        required: true,\n        message: \"请输入用户名\"\n      }],\n      password: [{\n        required: true,\n        message: \"请输入密码\"\n      }]\n      // checkCode: [{\n      //     required: true,\n      //     message: \"请输入验证码\"\n      // }],\n    };\n    const router = useRouter();\n    function dynamicRouter() {\n      axios.get(\"/url/route\").then(res => res.data).then(data => {\n        const route = JSON.stringify(data.data);\n        localStorage.setItem(\"routeLists\", route);\n        console.log(\"local: \" + route);\n        // data.data.array.forEach(element => {\n        //     console.log(\"reeoute: \" + element);\n\n        // });\n      }).catch(e => {\n        console.log(e);\n        ElMessage.error(\"菜单请求错误\");\n      });\n    }\n    const login = () => {\n      var form_obj = JSON.parse(JSON.stringify(formData));\n      axios.post(\"/url/login\", form_obj).then(res => res.data).then(res => {\n        if (res.code === 200) {\n          ElMessage({\n            message: '登录成功',\n            type: 'success'\n          });\n          localStorage.setItem(\"isLogin\", res.data);\n          dynamicRouter();\n          router.push(\"/home\");\n        } else {\n          ElMessage.error('账号或密码错误！！！登录失败！！！');\n        }\n      });\n    };\n    const __returned__ = {\n      formDataRef,\n      get formData() {\n        return formData;\n      },\n      set formData(v) {\n        formData = v;\n      },\n      rules,\n      router,\n      dynamicRouter,\n      login,\n      ref,\n      reactive,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      },\n      get store() {\n        return store;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","ElMessage","useRouter","axios","store","formDataRef","formData","username","password","rules","required","message","router","dynamicRouter","get","then","res","data","route","JSON","stringify","localStorage","setItem","console","log","catch","e","error","login","form_obj","parse","post","code","type","push"],"sources":["C:/Users/18725/Desktop/集训队管理系统开发/manage/front/manage/src/views/Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-body\">\r\n        <div class=\"login-panel\">\r\n            <div class=\"login-title\">用户登录</div>\r\n            <el-form :model=\"formData\" :rules=\"rules\" ref=\"formDataRef\">\r\n                <el-form-item prop=\"username\">\r\n                    <el-input placeholder=\"请输入账号\" v-model=\"formData.username\" size=\"large\" type=\"text\">\r\n                        <template #prefix>\r\n                            <el-icon>\r\n                                <i-ep-user />\r\n                            </el-icon>\r\n                        </template>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"password\">\r\n                    <el-input placeholder=\"请输入密码\" v-model=\"formData.password\" size=\"large\" type=\"password\"\r\n                        @keydown.enter=\"login()\">\r\n                        <template #prefix>\r\n                            <el-icon>\r\n                                <i-ep-lock />\r\n                            </el-icon>\r\n                        </template>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <!-- <el-form-item label=\"\">\r\n                    <div class=\"check-code-panel\">\r\n                        <el-input placeholder=\"请输入验证码\" v-model=\"formData.checkCode\" class=\"input-panel\" />\r\n                        <img src=\"checkCodeUrl\" class=\"check-code\">\r\n                    </div>\r\n                </el-form-item> -->\r\n                <!-- <el-form-item label=\"\">\r\n                    <el-checkbox label=\"记住密码\" name=\"type\" />\r\n                </el-form-item> -->\r\n                <el-form-item label=\"\">\r\n                    <el-button type=\"primary\" style=\"width: 100%;\" @click=\"login()\" size=\"large\">登录</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n​\r\n<script setup>\r\nimport { ref, reactive } from 'vue'\r\n// Element-Plus的依赖采用的是自动导入，所以这里无需显示的引入，其他地方的element-plus引用同理\r\nimport { ElMessage } from 'element-plus';\r\n// import request from '@/utils/request';      //这里使用自行封装的axios，下文已给出，照搬后修改运行端口即可\r\nimport { useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\nimport store from '@/store';\r\n\r\n\r\n// const checkCodeUrl = \"api/checkCode?\" + new Date().getTime();\r\n//表单\r\nconst formDataRef = ref();\r\nlet formData = reactive({\r\n    username: \"\",\r\n    password: \"\"\r\n});\r\nconst rules = {\r\n    username: [{\r\n        required: true,\r\n        message: \"请输入用户名\"\r\n    }],\r\n    password: [{\r\n        required: true,\r\n        message: \"请输入密码\"\r\n    }],\r\n    // checkCode: [{\r\n    //     required: true,\r\n    //     message: \"请输入验证码\"\r\n    // }],\r\n}\r\n\r\nconst router = useRouter();\r\nfunction dynamicRouter() {\r\n    axios.get(\"/url/route\").then(res => res.data).then(data => {\r\n        const route = JSON.stringify(data.data);\r\n        localStorage.setItem(\"routeLists\", route);\r\n        console.log(\"local: \" + route);\r\n        // data.data.array.forEach(element => {\r\n        //     console.log(\"reeoute: \" + element);\r\n\r\n        // });\r\n    }).catch(e => {\r\n        console.log(e);\r\n        ElMessage.error(\"菜单请求错误\");\r\n    })\r\n\r\n}\r\nconst login = () => {\r\n\r\n    var form_obj = JSON.parse(JSON.stringify(formData));\r\n\r\n    axios.post(\"/url/login\", form_obj).then(res => res.data).then(res => {\r\n        if (res.code === 200) {\r\n            ElMessage({\r\n                message: '登录成功',\r\n                type: 'success',\r\n            })\r\n            localStorage.setItem(\"isLogin\", res.data);\r\n            dynamicRouter();\r\n\r\n            router.push(\"/home\");\r\n        } else {\r\n            ElMessage.error('账号或密码错误！！！登录失败！！！')\r\n        }\r\n    });\r\n};\r\n\r\n\r\n</script>\r\n​\r\n<style scoped>\r\n.login-body {\r\n    background: url(\"../assets/bac.jpg\") no-repeat center center;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-size: cover;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n}\r\n\r\n.login-title {\r\n    font-size: 22px;\r\n    text-align: center;\r\n    margin-bottom: 22px;\r\n}\r\n\r\n.login-panel {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n    padding: 25px;\r\n    width: 26%;\r\n    min-width: 460px;\r\n    height: 30%;\r\n    min-height: 300px;\r\n    background: rgba(255, 255, 255, 0.6);\r\n    border-radius: 5%;\r\n    box-shadow: 2px 2px 10px #ddd;\r\n}\r\n</style>"],"mappings":";AA0CA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC;AACA,SAASC,SAAS,QAAQ,cAAc;AACxC;AACA,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;;AAG3B;AACA;;;;;;;;IACA,MAAMC,WAAW,GAAGN,GAAG,CAAC,CAAC;IACzB,IAAIO,QAAQ,GAAGN,QAAQ,CAAC;MACpBO,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACd,CAAC,CAAC;IACF,MAAMC,KAAK,GAAG;MACVF,QAAQ,EAAE,CAAC;QACPG,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE;MACb,CAAC,CAAC;MACFH,QAAQ,EAAE,CAAC;QACPE,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE;MACb,CAAC;MACD;MACA;MACA;MACA;IACJ,CAAC;IAED,MAAMC,MAAM,GAAGV,SAAS,CAAC,CAAC;IAC1B,SAASW,aAAaA,CAAA,EAAG;MACrBV,KAAK,CAACW,GAAG,CAAC,YAAY,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAACF,IAAI,CAACE,IAAI,IAAI;QACvD,MAAMC,KAAK,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAACA,IAAI,CAAC;QACvCI,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEJ,KAAK,CAAC;QACzCK,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGN,KAAK,CAAC;QAC9B;QACA;;QAEA;MACJ,CAAC,CAAC,CAACO,KAAK,CAACC,CAAC,IAAI;QACVH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;QACdzB,SAAS,CAAC0B,KAAK,CAAC,QAAQ,CAAC;MAC7B,CAAC,CAAC;IAEN;IACA,MAAMC,KAAK,GAAGA,CAAA,KAAM;MAEhB,IAAIC,QAAQ,GAAGV,IAAI,CAACW,KAAK,CAACX,IAAI,CAACC,SAAS,CAACd,QAAQ,CAAC,CAAC;MAEnDH,KAAK,CAAC4B,IAAI,CAAC,YAAY,EAAEF,QAAQ,CAAC,CAACd,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAACF,IAAI,CAACC,GAAG,IAAI;QACjE,IAAIA,GAAG,CAACgB,IAAI,KAAK,GAAG,EAAE;UAClB/B,SAAS,CAAC;YACNU,OAAO,EAAE,MAAM;YACfsB,IAAI,EAAE;UACV,CAAC,CAAC;UACFZ,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEN,GAAG,CAACC,IAAI,CAAC;UACzCJ,aAAa,CAAC,CAAC;UAEfD,MAAM,CAACsB,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC,MAAM;UACHjC,SAAS,CAAC0B,KAAK,CAAC,mBAAmB,CAAC;QACxC;MACJ,CAAC,CAAC;IACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}