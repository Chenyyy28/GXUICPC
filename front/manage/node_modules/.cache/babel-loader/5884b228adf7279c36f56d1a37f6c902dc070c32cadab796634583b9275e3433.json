{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport moment from 'moment';\nimport { reactive, ref, nextTick } from 'vue';\n// import { Search } from '@element-plus/icons-vue'\nexport default {\n  setup() {\n    let state = reactive({\n      tableData: []\n    });\n    let start = ref();\n    let end = ref();\n    const currentPage = ref(1);\n    const pageSize = ref(100);\n    const total = ref(1);\n    const contestName = ref();\n    const role = ref('-1');\n    const dialogVisible = ref(false);\n    const needPassword = ref(true);\n    const isAdd = ref(false);\n    const isAdmin = ref(true);\n    const rankVisible = ref(false);\n    let timeInterval = ref();\n    let user = reactive({});\n    const roleOptions = reactive([{\n      value: 1,\n      label: '现役'\n    }, {\n      value: 2,\n      label: '预备役'\n    }, {\n      value: -1,\n      label: '全部'\n    }]);\n    let contestForm = reactive({\n      id: 0,\n      description: '',\n      url: '',\n      roleId: '',\n      weight: '50',\n      startTime: '',\n      endTime: ''\n    });\n    let rankForm = reactive({\n      contestId: '',\n      userId: '',\n      raceNum: '',\n      ranking: '',\n      supplement: ''\n    });\n    function dateFormat(row, column) {\n      var date = row[column.property];\n      if (date == undefined) {\n        return \"\";\n      }\n      return moment(date).format('YYYY-MM-DD HH:mm:ss');\n    }\n    function handleSizeChange(val) {\n      pageSize.value = val;\n      nextTick(() => {\n        doSearch();\n      });\n      // location.reload();\n    }\n    function handleCurrentChange(val) {\n      currentPage.value = val;\n      nextTick(() => {\n        doSearch();\n      });\n    }\n    const getContestLists = function () {\n      user = JSON.parse(localStorage.getItem('user'));\n      axios.get(\"/url/contest\", {\n        params: {\n          currentPage: currentPage.value,\n          pageSize: pageSize.value,\n          contestName: contestName.value === '' ? null : contestName.value,\n          roleId: user.roleId\n        }\n      }).then(res => res.data).then(res => res.data).then(data => {\n        state.tableData = data.list;\n        total.value = data.total;\n      }).catch(err => {\n        console.log(err);\n        ElMessage.error(\"用户列表获取失败\");\n      });\n    };\n    function doSearch() {\n      nextTick(() => {\n        getContestLists();\n      });\n    }\n    const handleClose = done => {\n      done();\n      resetContestForm();\n    };\n    function resetContestForm() {\n      contestForm.id = 0;\n      contestForm.description = '';\n      contestForm.url = '';\n      contestForm.roleId = '';\n      contestForm.weight = '50';\n      contestForm.startTime = '';\n      contestForm.endTime = '';\n    }\n    function submit() {\n      dialogVisible.value = false;\n      if (isAdd.value == true) addContest();else {\n        updateContest();\n      }\n    }\n    function addContest() {\n      axios.post(\"/url/contest\", contestForm).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          ElMessage.success(\"添加成功\");\n          location.reload();\n        } else {\n          ElMessage.success(\"添加失败\");\n        }\n      }).catch(err => {\n        console.log(err);\n        ElMessage.success(\"添加失败\");\n      }).finally(() => {\n        resetContestForm();\n      });\n    }\n    function deleteUser(id) {\n      ElMessageBox.confirm('危险操作，确认删除吗', 'danger', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        axios.delete(\"/url/contest\", {\n          params: {\n            id: id\n          }\n        }).then(res => res.data).then(res => res.data).then(data => {\n          ElMessage({\n            type: 'error',\n            message: '删除成功'\n          });\n          location.reload();\n        }).catch(err => {\n          ElMessage({\n            type: 'info',\n            message: '取消成功'\n          });\n        });\n      }).catch(() => {\n        ElMessage({\n          type: 'info',\n          message: '取消成功'\n        });\n      });\n    }\n    function copyProperties(contest) {\n      contestForm.id = contest.id;\n      contestForm.description = contest.description;\n      contestForm.url = contest.url;\n      contestForm.roleId = contest.roleId;\n      contestForm.weight = contest.weight;\n      contestForm.endTime = contest.startTime;\n      contestForm.endTime = contest.endTime;\n    }\n    function beforeUpdateContest(contest) {\n      dialogVisible.value = true;\n      isAdd.value = false;\n      copyProperties(contest);\n    }\n    function updateContest() {\n      axios.put(\"/url/contest\", contestForm).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          ElMessage.success(\"修改成功\");\n          location.reload();\n        } else {\n          ElMessage.error(\"修改失败\");\n        }\n      }).catch(err => {\n        console.log(err);\n        ElMessage.error(\"修改失败\");\n      }).finally(() => {\n        resetContestForm();\n      });\n    }\n    function addRankInfo(contestId) {\n      rankForm.contestId = contestId;\n      rankForm.userId = user.id;\n      rankVisible.value = true;\n    }\n    function submitRank() {\n      axios.post('/url/rank', rankForm).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          ElMessage.success(\"添加成功\");\n          // location.reload();\n        } else {\n          ElMessage.error(\"添加失败\");\n        }\n      }).catch(e => {\n        ElMessage.error(\"添加失败\");\n      });\n      rankVisible.value = false;\n      resetRankForm();\n    }\n    function resetRankForm() {\n      rankForm.ranking = '';\n      rankForm.raceNum = '';\n      rankForm.supplement = '';\n    }\n    function cancelForm() {\n      resetContestForm();\n      resetRankForm();\n      dialogVisible.value = false;\n      rankVisible.value = false;\n    }\n    function updateTime() {\n      axios.put('/url/time', timeInterval.value).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          ElMessage.success(\"修改时间区间成功\");\n        } else {\n          ElMessage.error(\"修改时间区间失败\");\n        }\n      }).catch(e => {\n        ElMessage.error(\"修改时间区间失败\");\n      });\n    }\n    function getTime() {\n      axios.get('/url/time').then(res => res.data).then(res => {\n        this.timeInterval = res.data;\n        start = new Date(timeInterval[0]);\n        end = new Date(timeInterval[1]);\n      }).catch(e => {});\n    }\n    return {\n      state,\n      dateFormat,\n      currentPage,\n      pageSize,\n      contestName,\n      role,\n      total,\n      handleSizeChange,\n      handleCurrentChange,\n      getContestLists,\n      doSearch,\n      dialogVisible,\n      handleClose,\n      contestForm,\n      submit,\n      resetContestForm,\n      needPassword,\n      deleteUser,\n      updateContest,\n      beforeUpdateContest,\n      cancelForm,\n      isAdd,\n      isAdmin,\n      rankVisible,\n      rankForm,\n      resetRankForm,\n      roleOptions,\n      user,\n      submitRank,\n      addRankInfo,\n      timeInterval,\n      updateTime,\n      getTime,\n      start,\n      end\n    };\n  },\n  beforeCreate() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n    if (this.user.roleId == 0) this.isAdmin = true;else this.isAdmin = false;\n    this.getContestLists();\n    this.getTime();\n  }\n};","map":{"version":3,"names":["axios","ElMessage","ElMessageBox","moment","reactive","ref","nextTick","setup","state","tableData","start","end","currentPage","pageSize","total","contestName","role","dialogVisible","needPassword","isAdd","isAdmin","rankVisible","timeInterval","user","roleOptions","value","label","contestForm","id","description","url","roleId","weight","startTime","endTime","rankForm","contestId","userId","raceNum","ranking","supplement","dateFormat","row","column","date","property","undefined","format","handleSizeChange","val","doSearch","handleCurrentChange","getContestLists","JSON","parse","localStorage","getItem","get","params","then","res","data","list","catch","err","console","log","error","handleClose","done","resetContestForm","submit","addContest","updateContest","post","code","success","location","reload","finally","deleteUser","confirm","confirmButtonText","cancelButtonText","type","delete","message","copyProperties","contest","beforeUpdateContest","put","addRankInfo","submitRank","e","resetRankForm","cancelForm","updateTime","getTime","Date","beforeCreate"],"sources":["C:\\Users\\18725\\Desktop\\集训队管理系统开发\\manage\\front\\manage\\src\\components\\ContestPage.vue"],"sourcesContent":["<template>\r\n    <el-main class=\"main\">\r\n        <div style=\"text-align:center;margin-bottom: 10px; position:relative\">\r\n            <el-input v-model=\"contestName\" style=\"max-width: 600px\" placeholder=\"Please input\"\r\n                class=\"input-with-select\">\r\n                <template #append>\r\n                    <el-button icon=\"Search\" @click=\"doSearch\" />\r\n                </template>\r\n            </el-input>\r\n            <el-button key type=\"primary\" v-if=\"isAdmin\" @click=\"dialogVisible = true; isAdd = true\" text bg\r\n                style=\"margin-left:10px\">\r\n                +新增训练\r\n            </el-button>\r\n            <span style=\"margin-left: 10px;\">排名计算区间：</span>\r\n            <el-date-picker style=\"margin-left: 10px;\" v-if=\"isAdmin\" v-model=\"timeInterval\" type=\"daterange\"\r\n                unlink-panels range-separator=\"|\" start-placeholder=\"Start date\" end-placeholder=\"End date\"\r\n                :shortcuts=\"shortcuts\" :size=\"size\" format=\"YYYY/MM/DD\" value-format=\"x\" @change=\"updateTime\" />\r\n            <span>{{ start }} 到</span>\r\n            <span>{{ end }}</span>\r\n\r\n        </div>\r\n\r\n        <el-dialog style=\"text-align: center;\" v-model=\"dialogVisible\" title=\"输入用户信息\" width=\"500\"\r\n            :before-close=\"handleClose\">\r\n            <el-form style=\"max-width: 400px;margin:0 auto\" :model=\"contestForm\" status-icon label-width=\"auto\"\r\n                class=\"demo-ruleForm\">\r\n                <el-form-item label=\"训练描述\" prop=\"description\">\r\n                    <el-input v-model=\"contestForm.description\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"链接\" prop=\"url\">\r\n                    <el-input v-model=\"contestForm.url\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"训练面向人群\" prop=\"roleId\">\r\n                    <el-select v-model=\"contestForm.roleId\" placeholder=\"请选择对象\" style=\"width: 240px\">\r\n                        <el-option v-for=\"item in roleOptions\" :key=\"item.value\" :label=\"item.label\"\r\n                            :value=\"item.value\" />\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"计算权重\" prop=\"weight\">\r\n                    <el-input v-model=\"contestForm.weight\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"开始时间\" prop=\"startTime\">\r\n                    <el-date-picker v-model=\"contestForm.startTime\" type=\"datetime\" placeholder=\"请选择开始时间\"\r\n                        format=\"YYYY/MM/DD HH:mm:ss\" value-format=\"x\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"结束时间\" prop=\"endTime\">\r\n                    <el-date-picker v-model=\"contestForm.endTime\" type=\"datetime\" placeholder=\"请选择结束时间\"\r\n                        format=\"YYYY/MM/DD HH:mm:ss\" value-format=\"x\" />\r\n                </el-form-item>\r\n            </el-form>\r\n            <template #footer>\r\n                <div class=\"dialog-footer\">\r\n                    <el-button @click=\"cancelForm\">取消</el-button>\r\n                    <el-button type=\"primary\" @click=\"submit\">\r\n                        提交\r\n                    </el-button>\r\n                </div>\r\n            </template>\r\n        </el-dialog>\r\n        <el-dialog style=\"text-align: center;\" v-model=\"rankVisible\" title=\"输入用户信息\" width=\"500\"\r\n            :before-close=\"handleClose\">\r\n            <el-form style=\"max-width: 400px;margin:0 auto\" :model=\"rankForm\" status-icon label-width=\"auto\"\r\n                class=\"demo-ruleForm\">\r\n                <el-form-item label=\"现场出题数\" prop=\"raceNum\">\r\n                    <el-input v-model=\"rankForm.raceNum\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"现场排名\" prop=\"ranking\">\r\n                    <el-input v-model=\"rankForm.ranking\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"补题数\" prop=\"supplement\">\r\n                    <el-input v-model=\"rankForm.supplement\" />\r\n                </el-form-item>\r\n            </el-form>\r\n            <template #footer>\r\n                <div class=\"dialog-footer\">\r\n                    <el-button @click=\"cancelForm\">取消</el-button>\r\n                    <el-button type=\"primary\" @click=\"submitRank\">\r\n                        提交\r\n                    </el-button>\r\n                </div>\r\n            </template>\r\n        </el-dialog>\r\n        <el-table :data=\"state.tableData\" stripe style=\"width: 100%\">\r\n            <el-table-column prop=\"description\" label=\"训练描述\" width=\"300\" />\r\n            <el-table-column prop=\"url\" label=\"链接\" width=\"400\" />\r\n\r\n            <el-table-column prop=\"author\" label=\"作者\" />\r\n            <el-table-column prop=\"roleId\" label=\"面向人群\" width=\"100\">\r\n                <template #default=\"scope\">\r\n                    <span v-if=\"scope.row.roleId == 1\">现役</span>\r\n                    <span v-if=\"scope.row.roleId == 2\">预备役</span>\r\n                    <span v-if=\"scope.row.roleId == -1\">全部</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"weight\" label=\"计算权重\" width=\"100\" />\r\n            <el-table-column prop=\"startTime\" :formatter=\"dateFormat\" label=\"开始时间\" width=\"200\" />\r\n            <el-table-column prop=\"endTime\" :formatter=\"dateFormat\" label=\"结束时间\" width=\"200\" />\r\n            <el-table-column prop=\"createTime\" :formatter=\"dateFormat\" label=\"创建时间\" width=\"200\" />\r\n\r\n            <el-table-column label=\"操作\">\r\n                <template v-slot=\"scope\">\r\n                    <el-button key type=\"success\" text bg @click=\"beforeUpdateContest(scope.row)\" v-if=\"isAdmin\">\r\n                        编辑\r\n                    </el-button>\r\n                    <el-button key @click=\"deleteUser(scope.row.id)\" type=\"danger\" text bg v-if=\"isAdmin\">\r\n                        删除\r\n                    </el-button>\r\n                    <el-button key @click=\"addRankInfo(scope.row.id)\" type=\"primary\" text bg v-if=\"!isAdmin\">\r\n                        填写信息\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <el-pagination v-model:current-page=\"currentPage\" v-model:page-size=\"pageSize\"\r\n            :page-sizes=\"[100, 200, 300, 400]\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\"\r\n            @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" style=\"margin-top: 10px;\" />\r\n\r\n    </el-main>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport moment from 'moment';\r\nimport { reactive, ref, nextTick } from 'vue';\r\n// import { Search } from '@element-plus/icons-vue'\r\nexport default {\r\n    setup() {\r\n        let state = reactive({\r\n            tableData: []\r\n        });\r\n        let start = ref()\r\n        let end = ref()\r\n        const currentPage = ref(1);\r\n        const pageSize = ref(100);\r\n        const total = ref(1);\r\n        const contestName = ref()\r\n        const role = ref('-1')\r\n        const dialogVisible = ref(false);\r\n        const needPassword = ref(true);\r\n        const isAdd = ref(false);\r\n        const isAdmin = ref(true)\r\n        const rankVisible = ref(false)\r\n        let timeInterval = ref()\r\n        let user = reactive({})\r\n        const roleOptions = reactive([\r\n            {\r\n                value: 1,\r\n                label: '现役'\r\n            },\r\n            {\r\n                value: 2,\r\n                label: '预备役'\r\n            },\r\n            {\r\n                value: -1,\r\n                label: '全部'\r\n            }\r\n        ])\r\n        let contestForm = reactive({\r\n            id: 0,\r\n            description: '',\r\n            url: '',\r\n            roleId: '',\r\n            weight: '50',\r\n            startTime: '',\r\n            endTime: ''\r\n        })\r\n        let rankForm = reactive({\r\n            contestId: '',\r\n            userId: '',\r\n            raceNum: '',\r\n            ranking: '',\r\n            supplement: ''\r\n        })\r\n        function dateFormat(row, column) {\r\n            var date = row[column.property];\r\n            if (date == undefined) {\r\n                return \"\";\r\n            }\r\n            return moment(date).format('YYYY-MM-DD HH:mm:ss');\r\n        }\r\n        function handleSizeChange(val) {\r\n            pageSize.value = val;\r\n            nextTick(() => {\r\n                doSearch();\r\n            })\r\n            // location.reload();\r\n        }\r\n        function handleCurrentChange(val) {\r\n            currentPage.value = val;\r\n            nextTick(() => {\r\n                doSearch();\r\n            })\r\n        }\r\n        const getContestLists = function () {\r\n            user = JSON.parse(localStorage.getItem('user'));\r\n\r\n            axios.get(\"/url/contest\", {\r\n                params:\r\n                {\r\n                    currentPage: currentPage.value,\r\n                    pageSize: pageSize.value,\r\n                    contestName: contestName.value === '' ? null : contestName.value,\r\n                    roleId: user.roleId\r\n                }\r\n            }).then(res => res.data).then(res => res.data)\r\n                .then(data => {\r\n                    state.tableData = data.list;\r\n                    total.value = data.total;\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n\r\n                    ElMessage.error(\"用户列表获取失败\");\r\n                })\r\n        }\r\n        function doSearch() {\r\n            nextTick(() => {\r\n                getContestLists();\r\n            })\r\n        }\r\n        const handleClose = (done) => {\r\n            done();\r\n            resetContestForm();\r\n        }\r\n        function resetContestForm() {\r\n            contestForm.id = 0;\r\n            contestForm.description = '';\r\n            contestForm.url = '';\r\n            contestForm.roleId = '';\r\n            contestForm.weight = '50';\r\n            contestForm.startTime = '';\r\n            contestForm.endTime = '';\r\n        }\r\n        function submit() {\r\n            dialogVisible.value = false;\r\n            if (isAdd.value == true)\r\n                addContest();\r\n            else {\r\n                updateContest();\r\n            }\r\n        }\r\n        function addContest() {\r\n            axios.post(\"/url/contest\", contestForm)\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    if (res.code == 200) {\r\n                        ElMessage.success(\"添加成功\")\r\n                        location.reload();\r\n\r\n                    } else {\r\n                        ElMessage.success(\"添加失败\")\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    ElMessage.success(\"添加失败\")\r\n\r\n                }).finally(() => {\r\n                    resetContestForm();\r\n                })\r\n        }\r\n        function deleteUser(id) {\r\n            ElMessageBox.confirm(\r\n                '危险操作，确认删除吗',\r\n                'danger',\r\n                {\r\n                    confirmButtonText: '确认',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning',\r\n                }\r\n            ).then(() => {\r\n                axios.delete(\"/url/contest\", {\r\n                    params: {\r\n                        id: id\r\n                    }\r\n                }).then(res => res.data)\r\n                    .then(res => res.data)\r\n                    .then(data => {\r\n                        ElMessage({\r\n                            type: 'error',\r\n                            message: '删除成功'\r\n                        })\r\n                        location.reload();\r\n                    })\r\n                    .catch(err => {\r\n                        ElMessage({\r\n                            type: 'info',\r\n                            message: '取消成功'\r\n                        })\r\n                    })\r\n\r\n            }).catch(() => {\r\n                ElMessage({\r\n                    type: 'info',\r\n                    message: '取消成功'\r\n                })\r\n            })\r\n        }\r\n        function copyProperties(contest) {\r\n            contestForm.id = contest.id;\r\n            contestForm.description = contest.description;\r\n            contestForm.url = contest.url;\r\n            contestForm.roleId = contest.roleId\r\n            contestForm.weight = contest.weight\r\n            contestForm.endTime = contest.startTime;\r\n            contestForm.endTime = contest.endTime;\r\n        }\r\n        function beforeUpdateContest(contest) {\r\n            dialogVisible.value = true;\r\n            isAdd.value = false;\r\n            copyProperties(contest);\r\n        }\r\n        function updateContest() {\r\n            axios.put(\"/url/contest\", contestForm)\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    if (res.code == 200) {\r\n                        ElMessage.success(\"修改成功\")\r\n                        location.reload();\r\n                    } else {\r\n                        ElMessage.error(\"修改失败\")\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    ElMessage.error(\"修改失败\")\r\n                }).finally(() => {\r\n                    resetContestForm();\r\n                })\r\n        }\r\n        function addRankInfo(contestId) {\r\n            rankForm.contestId = contestId;\r\n            rankForm.userId = user.id;\r\n            rankVisible.value = true;\r\n        }\r\n        function submitRank() {\r\n            axios.post('/url/rank', rankForm)\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    if (res.code == 200) {\r\n                        ElMessage.success(\"添加成功\")\r\n                        // location.reload();\r\n                    } else {\r\n                        ElMessage.error(\"添加失败\")\r\n                    }\r\n                }).catch(e => {\r\n                    ElMessage.error(\"添加失败\")\r\n                })\r\n            rankVisible.value = false;\r\n            resetRankForm();\r\n\r\n        }\r\n        function resetRankForm() {\r\n            rankForm.ranking = '';\r\n            rankForm.raceNum = '';\r\n            rankForm.supplement = '';\r\n        }\r\n        function cancelForm() {\r\n            resetContestForm();\r\n            resetRankForm();\r\n            dialogVisible.value = false;\r\n            rankVisible.value = false;\r\n        }\r\n        function updateTime() {\r\n            axios.put('/url/time', timeInterval.value)\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    if (res.code == 200) {\r\n                        ElMessage.success(\"修改时间区间成功\")\r\n                    } else {\r\n                        ElMessage.error(\"修改时间区间失败\")\r\n                    }\r\n                }).catch(e => {\r\n                    ElMessage.error(\"修改时间区间失败\")\r\n                })\r\n        }\r\n        function getTime() {\r\n            axios.get('/url/time')\r\n                .then(res => res.data)\r\n                .then(res => {\r\n                    this.timeInterval = res.data;\r\n                    start = new Date(timeInterval[0]);\r\n                    end = new Date(timeInterval[1]);\r\n                })\r\n                .catch(e => { })\r\n        }\r\n        return {\r\n            state,\r\n            dateFormat,\r\n            currentPage,\r\n            pageSize,\r\n            contestName,\r\n            role,\r\n            total,\r\n            handleSizeChange,\r\n            handleCurrentChange,\r\n            getContestLists,\r\n            doSearch,\r\n            dialogVisible,\r\n            handleClose,\r\n            contestForm,\r\n            submit,\r\n            resetContestForm,\r\n            needPassword,\r\n            deleteUser,\r\n            updateContest,\r\n            beforeUpdateContest,\r\n            cancelForm,\r\n            isAdd,\r\n            isAdmin,\r\n            rankVisible,\r\n            rankForm,\r\n            resetRankForm,\r\n            roleOptions,\r\n            user,\r\n            submitRank,\r\n            addRankInfo,\r\n            timeInterval,\r\n            updateTime,\r\n            getTime,\r\n            start,\r\n            end\r\n        }\r\n    },\r\n    beforeCreate() {\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        if (this.user.roleId == 0)\r\n            this.isAdmin = true;\r\n        else this.isAdmin = false;\r\n        this.getContestLists();\r\n        this.getTime()\r\n    }\r\n}\r\n</script>\r\n\r\n<style s>\r\n.main {\r\n    background-color: #EEE\r\n}\r\n\r\n.mainBody {\r\n    background-color: white;\r\n    width: 70%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    position: relative;\r\n}\r\n\r\n.myBody {\r\n    position: absolute;\r\n    left: 10%;\r\n    top: 10%;\r\n    width: 80%;\r\n    height: 90%;\r\n}\r\n\r\n.name {\r\n    width: -100px;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n}\r\n\r\n.gexing {\r\n    font-family: STXingkai, '华正行楷';\r\n}\r\n\r\n.input-with-select .el-input-group__prepend {\r\n    background-color: var(--el-fill-color-blank);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}